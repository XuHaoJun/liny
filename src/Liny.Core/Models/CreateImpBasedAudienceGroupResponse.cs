/*
 * Merged API
 *
 * Merged OpenAPI specification
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using Liny.Core.Converters;

namespace Liny.Core.Models
{
    /// <summary>
    /// Create audience for impression-based retargeting
    /// </summary>
    [DataContract]
    public partial class CreateImpBasedAudienceGroupResponse
        : IEquatable<CreateImpBasedAudienceGroupResponse>
    {
        /// <summary>
        /// The audience ID.
        /// </summary>
        /// <value>The audience ID.</value>
        [DataMember(Name = "audienceGroupId", EmitDefaultValue = true)]
        public long AudienceGroupId { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public AudienceGroupType Type { get; set; }

        /// <summary>
        /// The audience&#39;s name.
        /// </summary>
        /// <value>The audience&#39;s name.</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// When the audience was created (in UNIX time).
        /// </summary>
        /// <value>When the audience was created (in UNIX time).</value>
        [DataMember(Name = "created", EmitDefaultValue = true)]
        public long Created { get; set; }

        /// <summary>
        /// The request ID that was specified when the audience was created.
        /// </summary>
        /// <value>The request ID that was specified when the audience was created.</value>
        [DataMember(Name = "requestId", EmitDefaultValue = false)]
        public string RequestId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CreateImpBasedAudienceGroupResponse {\n");
            sb.Append("  AudienceGroupId: ").Append(AudienceGroupId).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  RequestId: ").Append(RequestId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            var options = new JsonSerializerOptions { WriteIndented = true };

            return JsonSerializer.Serialize(this, options);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null)
                return false;
            if (ReferenceEquals(this, obj))
                return true;
            return obj.GetType() == GetType() && Equals((CreateImpBasedAudienceGroupResponse)obj);
        }

        /// <summary>
        /// Returns true if CreateImpBasedAudienceGroupResponse instances are equal
        /// </summary>
        /// <param name="other">Instance of CreateImpBasedAudienceGroupResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateImpBasedAudienceGroupResponse other)
        {
            if (other is null)
                return false;
            if (ReferenceEquals(this, other))
                return true;

            return (
                    AudienceGroupId == other.AudienceGroupId
                    || AudienceGroupId.Equals(other.AudienceGroupId)
                )
                && (Type == other.Type || Type.Equals(other.Type))
                && (
                    Description == other.Description
                    || Description != null && Description.Equals(other.Description)
                )
                && (Created == other.Created || Created.Equals(other.Created))
                && (
                    RequestId == other.RequestId
                    || RequestId != null && RequestId.Equals(other.RequestId)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)

                hashCode = hashCode * 59 + AudienceGroupId.GetHashCode();

                hashCode = hashCode * 59 + Type.GetHashCode();
                if (Description != null)
                    hashCode = hashCode * 59 + Description.GetHashCode();

                hashCode = hashCode * 59 + Created.GetHashCode();
                if (RequestId != null)
                    hashCode = hashCode * 59 + RequestId.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
#pragma warning disable 1591

        public static bool operator ==(
            CreateImpBasedAudienceGroupResponse left,
            CreateImpBasedAudienceGroupResponse right
        )
        {
            return Equals(left, right);
        }

        public static bool operator !=(
            CreateImpBasedAudienceGroupResponse left,
            CreateImpBasedAudienceGroupResponse right
        )
        {
            return !Equals(left, right);
        }

#pragma warning restore 1591
        #endregion Operators
    }
}
