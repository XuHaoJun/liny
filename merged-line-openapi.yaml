openapi: 3.0.0
info:
  title: Merged API
  version: 1.0.0
  description: Merged OpenAPI specification
paths:
  /v2/bot/channel/webhook/endpoint:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-webhook-endpoint-information
      tags:
      - messaging-api
      operationId: getWebhookEndpoint
      description: Get webhook endpoint information
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWebhookEndpointResponse'
              examples:
                ACTIVE:
                  summary: If the webhook URL was set and the webhook usage is enabled
                  value:
                    endpoint: https://example.com/test
                    active: true
                INACTIVE:
                  summary: If the webhook URL was set and the webhook usage is disabled
                  value:
                    endpoint: https://example.com/test
                    active: false
    put:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#set-webhook-endpoint-url
      tags:
      - messaging-api
      operationId: setWebhookEndpoint
      description: Set webhook endpoint URL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetWebhookEndpointRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/channel/webhook/test:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#test-webhook-endpoint
      tags:
      - messaging-api
      operationId: testWebhookEndpoint
      description: Test webhook endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestWebhookEndpointRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestWebhookEndpointResponse'
              example:
                success: true
                timestamp: '2020-09-30T05:38:20.031Z'
                statusCode: 200
                reason: OK
                detail: '200'
  /v2/bot/message/{messageId}/content:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-content
      servers:
      - url: https://api-data.line.me
      tags:
      - messaging-api-blob
      operationId: getMessageContent
      description: Download image, video, and audio data sent from users.
      parameters:
      - name: messageId
        in: path
        required: true
        description: Message ID of video or audio
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                description: blob response
                type: string
                format: binary
  /v2/bot/message/{messageId}/content/preview:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-image-or-video-preview
      servers:
      - url: https://api-data.line.me
      tags:
      - messaging-api-blob
      operationId: getMessageContentPreview
      description: Get a preview image of the image or video
      parameters:
      - name: messageId
        in: path
        required: true
        description: Message ID of image or video
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
                description: blob response
  /v2/bot/message/{messageId}/content/transcoding:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#verify-video-or-audio-preparation-status
      servers:
      - url: https://api-data.line.me
      tags:
      - messaging-api-blob
      operationId: getMessageContentTranscodingByMessageId
      description: Verify the preparation status of a video or audio for getting
      parameters:
      - name: messageId
        in: path
        required: true
        description: Message ID of video or audio
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessageContentTranscodingResponse'
              example:
                status: processing
  /v2/bot/message/reply:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-reply-message
      tags:
      - messaging-api
      operationId: replyMessage
      description: Send reply message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReplyMessageResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/message/push:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-push-message
      tags:
      - messaging-api
      operationId: pushMessage
      description: Sends a message to a user, group chat, or multi-person chat at
        any time.
      parameters:
      - name: X-Line-Retry-Key
        in: header
        required: false
        schema:
          type: string
          format: uuid
        description: 'Retry key.

          Specifies the UUID in hexadecimal format (e.g., `123e4567-e89b-12d3-a456-426614174000`)
          generated by any method.

          The retry key isn''t generated by LINE. Each developer must generate their
          own retry key.

          '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushMessageRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushMessageResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/message/multicast:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-multicast-message
      tags:
      - messaging-api
      operationId: multicast
      description: An API that efficiently sends the same message to multiple user
        IDs. You can't send messages to group chats or multi-person chats.
      parameters:
      - name: X-Line-Retry-Key
        in: header
        required: false
        schema:
          type: string
          format: uuid
        description: 'Retry key.

          Specifies the UUID in hexadecimal format (e.g., `123e4567-e89b-12d3-a456-426614174000`)
          generated by any method.

          The retry key isn''t generated by LINE. Each developer must generate their
          own retry key.

          '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MulticastRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MulticastResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/message/narrowcast:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-narrowcast-message
      tags:
      - messaging-api
      operationId: narrowcast
      description: Send narrowcast message
      parameters:
      - name: X-Line-Retry-Key
        in: header
        required: false
        schema:
          type: string
          format: uuid
        description: 'Retry key.

          Specifies the UUID in hexadecimal format (e.g., `123e4567-e89b-12d3-a456-426614174000`)
          generated by any method.

          The retry key isn''t generated by LINE. Each developer must generate their
          own retry key.

          '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NarrowcastRequest'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NarrowcastResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/message/progress/narrowcast:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-narrowcast-progress-status
      tags:
      - messaging-api
      operationId: getNarrowcastProgress
      description: Gets the status of a narrowcast message.
      parameters:
      - name: requestId
        in: query
        required: true
        schema:
          type: string
        description: The narrowcast message's request ID. Each Messaging API request
          has a request ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NarrowcastProgressResponse'
              example:
                phase: waiting
                acceptedTime: 2020-12-03 10:15:30.121000+00:00
  /v2/bot/message/broadcast:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-broadcast-message
      tags:
      - messaging-api
      operationId: broadcast
      description: Sends a message to multiple users at any time.
      parameters:
      - name: X-Line-Retry-Key
        in: header
        required: false
        schema:
          type: string
          format: uuid
        description: 'Retry key.

          Specifies the UUID in hexadecimal format (e.g., `123e4567-e89b-12d3-a456-426614174000`)
          generated by any method.

          The retry key isn''t generated by LINE. Each developer must generate their
          own retry key.

          '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BroadcastRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/message/quota:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-quota
      tags:
      - messaging-api
      operationId: getMessageQuota
      description: Gets the target limit for sending messages in the current month.
        The total number of the free messages and the additional messages is returned.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageQuotaResponse'
              example:
                type: limited
                value: 1000
  /v2/bot/message/quota/consumption:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-consumption
      tags:
      - messaging-api
      operationId: getMessageQuotaConsumption
      description: Gets the number of messages sent in the current month.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuotaConsumptionResponse'
              example:
                totalUsage: 500
  /v2/bot/message/delivery/reply:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-number-of-reply-messages
      tags:
      - messaging-api
      operationId: getNumberOfSentReplyMessages
      description: Get number of sent reply messages
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
        description: 'Date the messages were sent


          Format: `yyyyMMdd` (e.g. `20191231`)

          Timezone: UTC+9

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberOfMessagesResponse'
              example:
                status: ready
                success: 10000
  /v2/bot/message/delivery/push:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-number-of-push-messages
      tags:
      - messaging-api
      operationId: getNumberOfSentPushMessages
      description: Get number of sent push messages
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
        description: 'Date the messages were sent


          Format: `yyyyMMdd` (e.g. `20191231`)

          Timezone: UTC+9

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberOfMessagesResponse'
              example:
                status: ready
                success: 10000
  /v2/bot/message/delivery/multicast:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-number-of-multicast-messages
      tags:
      - messaging-api
      operationId: getNumberOfSentMulticastMessages
      description: Get number of sent multicast messages
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
        description: 'Date the messages were sent


          Format: `yyyyMMdd` (e.g. `20191231`)

          Timezone: UTC+9

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberOfMessagesResponse'
              example:
                status: ready
                success: 10000
  /v2/bot/message/delivery/broadcast:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-number-of-broadcast-messages
      tags:
      - messaging-api
      operationId: getNumberOfSentBroadcastMessages
      description: Get number of sent broadcast messages
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          format: ^[0-9]{8}$
        description: 'Date the messages were sent


          Format: yyyyMMdd (e.g. 20191231)

          Timezone: UTC+9

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberOfMessagesResponse'
              example:
                status: ready
                success: 10000
  /v2/bot/message/validate/reply:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-reply-message
      tags:
      - messaging-api
      operationId: validateReply
      description: Validate message objects of a reply message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateMessageRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/message/validate/push:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-push-message
      tags:
      - messaging-api
      operationId: validatePush
      description: Validate message objects of a push message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateMessageRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/message/validate/multicast:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-multicast-message
      tags:
      - messaging-api
      operationId: validateMulticast
      description: Validate message objects of a multicast message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateMessageRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/message/validate/narrowcast:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-narrowcast-message
      tags:
      - messaging-api
      operationId: validateNarrowcast
      description: Validate message objects of a narrowcast message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateMessageRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/message/validate/broadcast:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#validate-message-objects-of-broadcast-message
      tags:
      - messaging-api
      operationId: validateBroadcast
      description: Validate message objects of a broadcast message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateMessageRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/message/aggregation/info:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-number-of-units-used-this-month
      tags:
      - messaging-api
      operationId: getAggregationUnitUsage
      description: Get number of units used this month
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAggregationUnitUsageResponse'
              example:
                numOfCustomAggregationUnits: 22
  /v2/bot/message/aggregation/list:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-name-list-of-units-used-this-month
      tags:
      - messaging-api
      operationId: getAggregationUnitNameList
      description: Get name list of units used this month
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: string
        description: 'The maximum number of aggregation units you can get per request.

          '
      - name: start
        in: query
        required: false
        schema:
          type: string
        description: 'Value of the continuation token found in the next property of
          the JSON object returned in the response.

          If you can''t get all the aggregation units in one request, include this
          parameter to get the remaining array.

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAggregationUnitNameListResponse'
              example:
                customAggregationUnits:
                - promotion_a
                - promotion_b
                next: jxEWCEEP...
  /v2/bot/profile/{userId}:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-profile
      tags:
      - messaging-api
      operationId: getProfile
      description: Get profile
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
        description: User ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
              example:
                displayName: LINE taro
                userId: U4af4980629...
                language: en
                pictureUrl: https://obs.line-apps.com/...
                statusMessage: Hello, LINE!
  /v2/bot/followers/ids:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-follower-ids
      tags:
      - messaging-api
      operationId: getFollowers
      description: Get a list of users who added your LINE Official Account as a friend
      parameters:
      - name: start
        in: query
        required: false
        description: 'Value of the continuation token found in the next property of
          the JSON object returned in the response.

          Include this parameter to get the next array of user IDs.

          '
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of user IDs to retrieve in a single request.
        schema:
          type: integer
          format: int32
          default: 300
          maximum: 1000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFollowersResponse'
              example:
                userIds:
                - U4af4980629...
                - U0c229f96c4...
                - U95afb1d4df...
                next: yANU9IA...
  /v2/bot/info:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-bot-info
      tags:
      - messaging-api
      operationId: getBotInfo
      description: Get bot info
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotInfoResponse'
              example:
                userId: Ub9952f8...
                basicId: '@216ru...'
                displayName: Example name
                pictureUrl: https://obs.line-apps.com/...
                chatMode: chat
                markAsReadMode: manual
  /v2/bot/group/{groupId}/member/{userId}:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-group-member-profile
      tags:
      - messaging-api
      operationId: getGroupMemberProfile
      description: Get group chat member profile
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
        description: Group ID
      - name: userId
        in: path
        required: true
        schema:
          type: string
        description: User ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserProfileResponse'
              example:
                displayName: LINE taro
                userId: U4af4980629...
                pictureUrl: https://obs.line-apps.com/...
  /v2/bot/room/{roomId}/member/{userId}:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-room-member-profile
      tags:
      - messaging-api
      operationId: getRoomMemberProfile
      description: Get multi-person chat member profile
      parameters:
      - name: roomId
        in: path
        required: true
        schema:
          type: string
        description: Room ID
      - name: userId
        in: path
        required: true
        schema:
          type: string
        description: User ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomUserProfileResponse'
              example:
                displayName: LINE taro
                userId: U4af4980629...
                pictureUrl: https://obs.line-apps.com/...
  /v2/bot/group/{groupId}/members/ids:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-group-member-user-ids
      tags:
      - messaging-api
      operationId: getGroupMembersIds
      description: Get group chat member user IDs
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
        description: Group ID
      - name: start
        in: query
        required: false
        schema:
          type: string
        description: 'Value of the continuation token found in the `next` property
          of the JSON object returned in the response.

          Include this parameter to get the next array of user IDs for the members
          of the group.

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersIdsResponse'
              example:
                memberIds:
                - U4af4980629...
                - U0c229f96c4...
                - U95afb1d4df...
                next: jxEWCEEP...
  /v2/bot/room/{roomId}/members/ids:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-room-member-user-ids
      tags:
      - messaging-api
      operationId: getRoomMembersIds
      description: Get multi-person chat member user IDs
      parameters:
      - name: roomId
        in: path
        required: true
        schema:
          type: string
        description: Room ID
      - name: start
        in: query
        required: false
        schema:
          type: string
        description: 'Value of the continuation token found in the `next` property
          of the JSON object returned in the response.

          Include this parameter to get the next array of user IDs for the members
          of the group.

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersIdsResponse'
              example:
                memberIds:
                - U4af4980629...
                - U0c229f96c4...
                - U95afb1d4df...
                next: jxEWCEEP...
  /v2/bot/group/{groupId}/leave:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#leave-group
      tags:
      - messaging-api
      operationId: leaveGroup
      description: Leave group chat
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
        description: Group ID
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/room/{roomId}/leave:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#leave-room
      tags:
      - messaging-api
      operationId: leaveRoom
      description: Leave multi-person chat
      parameters:
      - name: roomId
        in: path
        required: true
        schema:
          type: string
        description: Room ID
      responses:
        '200':
          description: OK
  /v2/bot/group/{groupId}/summary:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-group-summary
      tags:
      - messaging-api
      operationId: getGroupSummary
      description: Get group chat summary
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
        description: Group ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupSummaryResponse'
              example:
                groupId: Ca56f94637c...
                groupName: Group name
                pictureUrl: https://profile.line-scdn.net/abcdefghijklmn
  /v2/bot/group/{groupId}/members/count:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-members-group-count
      tags:
      - messaging-api
      operationId: getGroupMemberCount
      description: Get number of users in a group chat
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
        description: Group ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMemberCountResponse'
              example:
                count: 3
  /v2/bot/room/{roomId}/members/count:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-members-room-count
      tags:
      - messaging-api
      operationId: getRoomMemberCount
      description: Get number of users in a multi-person chat
      parameters:
      - name: roomId
        in: path
        required: true
        schema:
          type: string
        description: Room ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomMemberCountResponse'
              example:
                count: 3
  /v2/bot/richmenu:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-rich-menu
      tags:
      - messaging-api
      operationId: createRichMenu
      description: Create rich menu
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichMenuRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichMenuIdResponse'
              example:
                richMenuId: '{richMenuId}'
  /v2/bot/richmenu/validate:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#validate-rich-menu-object
      tags:
      - messaging-api
      operationId: validateRichMenuObject
      description: Validate rich menu object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichMenuRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/richmenu/{richMenuId}/content:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#download-rich-menu-image
      servers:
      - url: https://api-data.line.me
      tags:
      - messaging-api-blob
      operationId: getRichMenuImage
      description: Download rich menu image.
      parameters:
      - name: richMenuId
        in: path
        required: true
        description: ID of the rich menu with the image to be downloaded
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
                description: blob response
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#upload-rich-menu-image
      servers:
      - url: https://api-data.line.me
      tags:
      - messaging-api-blob
      operationId: setRichMenuImage
      description: Upload rich menu image
      parameters:
      - name: richMenuId
        in: path
        required: true
        description: The ID of the rich menu to attach the image to
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              description: blob request
              type: string
              format: binary
      responses:
        '200':
          description: OK
  /v2/bot/richmenu/{richMenuId}:
    parameters:
    - name: richMenuId
      in: path
      required: true
      schema:
        type: string
      description: ID of a rich menu
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-rich-menu
      tags:
      - messaging-api
      operationId: getRichMenu
      description: Gets a rich menu via a rich menu ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichMenuResponse'
              example:
                richMenuId: '{richMenuId}'
                size:
                  width: 2500
                  height: 1686
                name: nice rich menu
                chatBarText: click
                selected: false
                areas:
                - bounds:
                    x: 0
                    y: 0
                    width: 2500
                    height: 1686
                  action:
                    type: postback
                    data: action=buy&itemid=123
    delete:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#delete-rich-menu
      tags:
      - messaging-api
      operationId: deleteRichMenu
      description: Deletes a rich menu.
      responses:
        '200':
          description: OK
  /v2/bot/richmenu/list:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-list
      tags:
      - messaging-api
      operationId: getRichMenuList
      description: Get rich menu list
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichMenuListResponse'
              example:
                richmenus:
                - richMenuId: '{richMenuId}'
                  size:
                    width: 2500
                    height: 1686
                  selected: false
                  name: nice rich menu
                  chatBarText: click
                  areas:
                  - bounds:
                      x: 0
                      y: 0
                      width: 2500
                      height: 1686
                    action:
                      type: postback
                      data: action=buy&itemid=123
  /v2/bot/user/all/richmenu/{richMenuId}:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#set-default-rich-menu
      tags:
      - messaging-api
      operationId: setDefaultRichMenu
      description: Set default rich menu
      parameters:
      - name: richMenuId
        in: path
        required: true
        schema:
          type: string
        description: ID of a rich menu
      responses:
        '200':
          description: OK
  /v2/bot/user/all/richmenu:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-default-rich-menu-id
      tags:
      - messaging-api
      operationId: getDefaultRichMenuId
      description: Gets the ID of the default rich menu set with the Messaging API.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichMenuIdResponse'
              example:
                richMenuId: '{richMenuId}'
    delete:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#cancel-default-rich-menu
      tags:
      - messaging-api
      operationId: cancelDefaultRichMenu
      description: Cancel default rich menu
      responses:
        '200':
          description: OK
  /v2/bot/richmenu/alias:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-rich-menu-alias
      tags:
      - messaging-api
      operationId: createRichMenuAlias
      description: Create rich menu alias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRichMenuAliasRequest'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/richmenu/alias/{richMenuAliasId}:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-alias-by-id
      tags:
      - messaging-api
      operationId: getRichMenuAlias
      description: Get rich menu alias information
      parameters:
      - name: richMenuAliasId
        in: path
        required: true
        schema:
          type: string
        description: The rich menu alias ID whose information you want to obtain.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichMenuAliasResponse'
              example:
                richMenuAliasId: richmenu-alias-a
                richMenuId: richmenu-88c05ef6921ae53f8b58a25f3a65faf7
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#update-rich-menu-alias
      tags:
      - messaging-api
      operationId: updateRichMenuAlias
      description: Update rich menu alias
      parameters:
      - name: richMenuAliasId
        in: path
        required: true
        schema:
          type: string
        description: The rich menu alias ID you want to update.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRichMenuAliasRequest'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#delete-rich-menu-alias
      tags:
      - messaging-api
      operationId: deleteRichMenuAlias
      description: Delete rich menu alias
      parameters:
      - name: richMenuAliasId
        in: path
        required: true
        schema:
          type: string
        description: Rich menu alias ID that you want to delete.
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/richmenu/alias/list:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-alias-list
      tags:
      - messaging-api
      operationId: getRichMenuAliasList
      description: Get list of rich menu alias
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichMenuAliasListResponse'
              examples:
                TWO_ALIASES:
                  summary: If you have 2 rich menu aliases
                  value:
                    aliases:
                    - richMenuAliasId: richmenu-alias-a
                      richMenuId: richmenu-862e6ad6c267d2ddf3f42bc78554f6a4
                    - richMenuAliasId: richmenu-alias-b
                      richMenuId: richmenu-88c05ef6921ae53f8b58a25f3a65faf7
                NO_ALIASES:
                  summary: If you have 0 rich menu alias
                  value:
                    aliases: []
  /v2/bot/user/{userId}/richmenu:
    parameters:
    - name: userId
      in: path
      required: true
      schema:
        type: string
      description: User ID. Found in the `source` object of webhook event objects.
        Do not use the LINE ID used in LINE.
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-id-of-user
      tags:
      - messaging-api
      operationId: getRichMenuIdOfUser
      description: Get rich menu ID of user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichMenuIdResponse'
              example:
                richMenuId: '{richMenuId}'
    delete:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#unlink-rich-menu-from-user
      tags:
      - messaging-api
      operationId: unlinkRichMenuIdFromUser
      description: Unlink rich menu from user
      responses:
        '200':
          description: OK
  /v2/bot/user/{userId}/richmenu/{richMenuId}:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#link-rich-menu-to-user
      tags:
      - messaging-api
      operationId: linkRichMenuIdToUser
      description: Link rich menu to user.
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
        description: User ID. Found in the `source` object of webhook event objects.
          Do not use the LINE ID used in LINE.
      - name: richMenuId
        in: path
        required: true
        schema:
          type: string
        description: ID of a rich menu
      responses:
        '200':
          description: OK
  /v2/bot/richmenu/bulk/link:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#link-rich-menu-to-users
      tags:
      - messaging-api
      operationId: linkRichMenuIdToUsers
      description: Link rich menu to multiple users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichMenuBulkLinkRequest'
        required: true
      responses:
        '202':
          description: Accepted
  /v2/bot/richmenu/bulk/unlink:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#unlink-rich-menu-from-users
      tags:
      - messaging-api
      operationId: unlinkRichMenuIdFromUsers
      description: Unlink rich menus from multiple users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichMenuBulkUnlinkRequest'
        required: true
      responses:
        '202':
          description: Accepted
  /v2/bot/richmenu/batch:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#batch-control-rich-menus-of-users
      tags:
      - messaging-api
      operationId: richMenuBatch
      description: 'You can use this endpoint to batch control the rich menu linked
        to the users using the endpoint such as Link rich menu to user.

        The following operations are available:


        1. Replace a rich menu with another rich menu for all users linked to a specific
        rich menu

        2. Unlink a rich menu for all users linked to a specific rich menu

        3. Unlink a rich menu for all users linked the rich menu

        '
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichMenuBatchRequest'
        required: true
      responses:
        '202':
          description: Accepted
  /v2/bot/richmenu/validate/batch:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#validate-batch-control-rich-menus-request
      tags:
      - messaging-api
      operationId: validateRichMenuBatchRequest
      description: Validate a request body of the Replace or unlink the linked rich
        menus in batches endpoint.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RichMenuBatchRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/richmenu/progress/batch:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-batch-control-rich-menus-progress-status
      tags:
      - messaging-api
      operationId: getRichMenuBatchProgress
      description: Get the status of Replace or unlink a linked rich menus in batches.
      parameters:
      - name: requestId
        in: query
        required: true
        schema:
          type: string
        description: A request ID used to batch control the rich menu linked to the
          user. Each Messaging API request has a request ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RichMenuBatchProgressResponse'
              example:
                phase: ongoing
                acceptedTime: 2023-07-04 10:15:30.121000+00:00
  /v2/bot/user/{userId}/linkToken:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#issue-link-token
      tags:
      - messaging-api
      operationId: issueLinkToken
      description: Issue link token
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
        description: 'User ID for the LINE account to be linked.

          Found in the `source` object of account link event objects. Do not use the
          LINE ID used in LINE.

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueLinkTokenResponse'
              example:
                linkToken: NMZTNuVrPTqlr2IF8Bnymkb7rXfYv5EY
  /v2/bot/message/markAsRead:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#mark-messages-from-users-as-read
      tags:
      - messaging-api
      operationId: markMessagesAsRead
      description: Mark messages from users as read
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkMessagesAsReadRequest'
            example:
              chat:
                userId: Uxxxxxxxxxxxxxxxxxx
        required: true
      responses:
        '200':
          description: OK
  /bot/pnp/push:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#send-line-notification-message
      tags:
      - messaging-api
      operationId: pushMessagesByPhone
      description: Send LINE notification message
      parameters:
      - name: X-Line-Delivery-Tag
        in: header
        required: false
        schema:
          type: string
          minLength: 16
          maxLength: 100
        description: String returned in the delivery.data property of the delivery
          completion event via Webhook.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PnpMessagesRequest'
        required: true
      responses:
        '200':
          description: OK
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /bot/ad/multicast/phone:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#phone-audience-match
      tags:
      - messaging-api
      operationId: audienceMatch
      description: Send a message using phone number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudienceMatchMessagesRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/message/delivery/pnp:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#get-number-of-sent-line-notification-messages
      tags:
      - messaging-api
      operationId: getPNPMessageStatistics
      description: "Get number of sent LINE notification messages\u3000"
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
          pattern: ^[0-9]{8}$
        description: 'Date the message was sent


          Format: `yyyyMMdd` (Example:`20211231`)

          Time zone: UTC+9

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberOfMessagesResponse'
              example:
                status: ready
                success: 3
  /v2/bot/message/delivery/ad_phone:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#get-phone-audience-match
      tags:
      - messaging-api
      operationId: getAdPhoneMessageStatistics
      description: Get result of message delivery using phone number
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
        description: 'Date the message was sent


          Format: `yyyyMMdd` (e.g. `20190831`)

          Time Zone: UTC+9

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberOfMessagesResponse'
              examples:
                READY:
                  summary: Example of response when status is `ready`
                  value:
                    status: ready
                    success: 10000
                UNAVAILABLE_FOR_PRIVACY:
                  summary: Example response when status is `unavailable_for_privacy`
                  value:
                    status: unavailable_for_privacy
  /v2/bot/membership/subscription/{userId}:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-a-users-membership-subscription-status
      tags:
      - messaging-api
      operationId: getMembershipSubscription
      description: Get a user's membership subscription.
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
        description: User ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMembershipSubscriptionResponse'
              example:
                subscriptions:
                - membership:
                    membershipId: 3189
                    title: Basic Plan
                    description: You will receive messages and photos every Saturday.
                    benefits:
                    - Members Only Messages
                    - Members Only Photos
                    price: 500.0
                    currency: JPY
                  user:
                    membershipNo: 1
                    joinedTime: 1707214784
                    nextBillingDate: '2024-02-08'
                    totalSubscriptionMonths: 1
        '400':
          description: An invalid user ID is specified.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Unable to get information about the membership to which the
            user subscribes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/membership/list:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-membership-plans
      tags:
      - messaging-api
      operationId: getMembershipList
      description: Get a list of memberships.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipListResponse'
              example:
                memberships:
                - membershipId: 3189
                  title: Basic Plan
                  description: You will receive messages and photos every Saturday.
                  benefits:
                  - Members Only Messages
                  - Members Only Photos
                  price: 500.0
                  currency: JPY
                  memberCount: 1
                  memberLimit: null
                  isInAppPurchase: true
                  isPublished: true
                - membershipId: 3213
                  title: Premium Plan
                  description: Invitation to a special party.
                  benefits:
                  - Members Only Party
                  price: 1500.0
                  currency: JPY
                  memberCount: 0
                  memberLimit: null
                  isInAppPurchase: false
                  isPublished: true
        '404':
          description: Unable to get information about the memberships.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/chat/loading/start:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#display-a-loading-indicator
      tags:
      - messaging-api
      operationId: showLoadingAnimation
      description: Display a loading animation in one-on-one chats between users and
        LINE Official Accounts.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowLoadingAnimationRequest'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowLoadingAnimationResponse'
        '400':
          description: An invalid chat ID is specified, or the loadingSeconds value
            is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v2/bot/audienceGroup/upload:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-upload-audience-group
      tags:
      - manage-audience
      operationId: createAudienceGroup
      description: Create audience for uploading user IDs (by JSON)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAudienceGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAudienceGroupResponse'
              example:
                audienceGroupId: 1234567890123
                createRoute: MESSAGING_API
                type: UPLOAD
                description: audienceGroupName_01
                created: 1613698278
                permission: READ_WRITE
                expireTimestamp: 1629250278
                isIfaAudience: false
    put:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#update-upload-audience-group
      tags:
      - manage-audience
      operationId: addAudienceToAudienceGroup
      description: Add user IDs or Identifiers for Advertisers (IFAs) to an audience
        for uploading user IDs (by JSON)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAudienceToAudienceGroupRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/audienceGroup/upload/byFile:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-upload-audience-group-by-file
      servers:
      - url: https://api-data.line.me
      tags:
      - manage-audience-blob
      operationId: createAudienceForUploadingUserIds
      description: Create audience for uploading user IDs (by file).
      requestBody:
        content:
          multipart/form-data:
            schema:
              description: Request for createAudienceForUploadingUserIds
              type: object
              required:
              - file
              properties:
                description:
                  type: string
                  maxLength: 120
                  description: 'The audience''s name. This is case-insensitive, meaning
                    AUDIENCE and audience are considered identical.

                    Max character limit: 120

                    '
                isIfaAudience:
                  type: boolean
                  description: 'To specify recipients by IFAs: set `true`.

                    To specify recipients by user IDs: set `false` or omit isIfaAudience
                    property.

                    '
                uploadDescription:
                  type: string
                  description: 'The description to register for the job (in `jobs[].description`).

                    '
                file:
                  type: string
                  format: binary
                  description: 'A text file with one user ID or IFA entered per line.
                    Specify text/plain as Content-Type. Max file number: 1

                    Max number: 1,500,000

                    '
            encoding:
              file:
                contentType: text/plain
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAudienceGroupResponse'
              example:
                audienceGroupId: 1234567890123
                createRoute: MESSAGING_API
                type: UPLOAD
                description: audienceGroupName_01
                created: 1613700237
                permission: READ_WRITE
                expireTimestamp: 1629252237
                isIfaAudience: false
    put:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#update-upload-audience-group-by-file
      servers:
      - url: https://api-data.line.me
      tags:
      - manage-audience-blob
      operationId: addUserIdsToAudience
      description: Add user IDs or Identifiers for Advertisers (IFAs) to an audience
        for uploading user IDs (by file).
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              description: Request of the addUserIdsToAudience
              type: object
              required:
              - file
              properties:
                audienceGroupId:
                  type: integer
                  format: int64
                  description: The audience ID.
                uploadDescription:
                  type: string
                  description: The description to register with the job
                file:
                  type: string
                  format: binary
                  description: 'A text file with one user ID or IFA entered per line.
                    Specify text/plain as Content-Type. Max file number: 1

                    Max number: 1,500,000

                    '
            encoding:
              file:
                contentType: text/plain
      responses:
        '202':
          description: OK
  /v2/bot/audienceGroup/click:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-click-audience-group
      tags:
      - manage-audience
      operationId: createClickBasedAudienceGroup
      description: Create audience for click-based retargeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClickBasedAudienceGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateClickBasedAudienceGroupResponse'
              example:
                audienceGroupId: 1234567890123
                createRoute: MESSAGING_API
                type: CLICK
                description: audienceGroupName_01
                created: 1613705240
                permission: READ_WRITE
                expireTimestamp: 1629257239
                isIfaAudience: false
                requestId: bb9744f9-47fa-4a29-941e-1234567890ab
                clickUrl: https://developers.line.biz/
  /v2/bot/audienceGroup/imp:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-imp-audience-group
      tags:
      - manage-audience
      operationId: createImpBasedAudienceGroup
      description: Create audience for impression-based retargeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImpBasedAudienceGroupRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImpBasedAudienceGroupResponse'
              example:
                audienceGroupId: 1234567890123
                createRoute: MESSAGING_API
                type: IMP
                description: audienceGroupName_01
                created: 1613707097
                permission: READ_WRITE
                expireTimestamp: 1629259095
                isIfaAudience: false
                requestId: bb9744f9-47fa-4a29-941e-1234567890ab
  /v2/bot/audienceGroup/{audienceGroupId}/updateDescription:
    put:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#set-description-audience-group
      tags:
      - manage-audience
      operationId: updateAudienceGroupDescription
      description: Renames an existing audience.
      parameters:
      - name: audienceGroupId
        in: path
        required: true
        description: The audience ID.
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAudienceGroupDescriptionRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/audienceGroup/{audienceGroupId}/activate:
    put:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#activate-audience-group
      tags:
      - manage-audience
      operationId: activateAudienceGroup
      description: Activate audience
      parameters:
      - name: audienceGroupId
        in: path
        required: true
        description: The audience ID.
        schema:
          type: integer
          format: int64
      responses:
        '202':
          description: Accepted
  /v2/bot/audienceGroup/{audienceGroupId}:
    parameters:
    - name: audienceGroupId
      in: path
      required: true
      description: The audience ID.
      schema:
        type: integer
        format: int64
    delete:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#delete-audience-group
      tags:
      - manage-audience
      operationId: deleteAudienceGroup
      description: Delete audience
      responses:
        '200':
          description: OK
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-audience-group
      tags:
      - manage-audience
      operationId: getAudienceData
      description: Gets audience data.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAudienceDataResponse'
              examples:
                UPLOADING_USER_IDS:
                  summary: Example of an audience used for uploading user IDs
                  value:
                    audienceGroup:
                      audienceGroupId: 1234567890123
                      createRoute: OA_MANAGER
                      type: UPLOAD
                      description: audienceGroupName_01
                      status: READY
                      audienceCount: 1887
                      created: 1608617466
                      permission: READ
                      isIfaAudience: false
                      expireTimestamp: 1624342266
                    jobs:
                    - audienceGroupJobId: 12345678
                      audienceGroupId: 1234567890123
                      description: audience_list.txt
                      type: DIFF_ADD
                      status: FINISHED
                      failedType: AUDIENCE_GROUP_AUDIENCE_INSUFFICIENT
                      audienceCount: 0
                      created: 1608617472
                      jobStatus: FINISHED
                CLICK_BASED:
                  summary: Example of an audience used for click-based retargeting
                  value:
                    audienceGroup:
                      audienceGroupId: 1234567890987
                      createRoute: OA_MANAGER
                      type: CLICK
                      description: audienceGroupName_02
                      status: IN_PROGRESS
                      audienceCount: 8619
                      created: 1611114828
                      permission: READ
                      isIfaAudience: false
                      expireTimestamp: 1626753228
                      requestId: c10c3d86-f565-...
                      clickUrl: https://example.com/
                    jobs: []
                APP_EVENTS:
                  summary: Example of an audience used for app events
                  value:
                    audienceGroup:
                      audienceGroupId: 2345678909876
                      createRoute: AD_MANAGER
                      type: APP_EVENT
                      description: audienceGroupName_03
                      status: READY
                      audienceCount: 8619
                      created: 1608619802
                      permission: READ
                      activated: 1610068515
                      inactiveTimestamp: 1625620516
                      isIfaAudience: false
                    jobs: []
                    adaccount:
                      name: Ad Account Name
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                message: audience group not found
                details:
                - message: AUDIENCE_GROUP_NOT_FOUND
  /v2/bot/audienceGroup/list:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-audience-groups
      tags:
      - manage-audience
      operationId: getAudienceGroups
      description: Gets data for more than one audience.
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
        description: The page to return when getting (paginated) results. Must be
          1 or higher.
      - name: description
        in: query
        required: false
        schema:
          type: string
        description: 'The name of the audience(s) to return.

          You can search for partial matches.

          This is case-insensitive, meaning AUDIENCE and audience are considered identical.

          If omitted, the name of the audience(s) will not be used as a search criterion.

          '
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AudienceGroupStatus'
        description: 'The status of the audience(s) to return. If omitted, the status
          of the audience(s) will not be used as a search criterion.

          '
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int64
          example: 20
          maximum: 40
        description: 'The number of audiences per page. Default: 20

          Max: 40

          '
      - name: includesExternalPublicGroups
        in: query
        required: false
        schema:
          type: boolean
          example: true
        description: 'true (default): Get public audiences created in all channels
          linked to the same bot.

          false: Get audiences created in the same channel.

          '
      - name: createRoute
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AudienceGroupCreateRoute'
        description: 'How the audience was created. If omitted, all audiences are
          included.


          `OA_MANAGER`: Return only audiences created with LINE Official Account Manager
          (opens new window).

          `MESSAGING_API`: Return only audiences created with Messaging API.

          '
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAudienceGroupsResponse'
              examples:
                TWO_AUDIENCES:
                  summary: Example of when there are two audiences that match the
                    specified filter
                  value:
                    audienceGroups:
                    - audienceGroupId: 1234567890123
                      createRoute: OA_MANAGER
                      type: CLICK
                      description: audienceGroupName_01
                      status: IN_PROGRESS
                      audienceCount: 8619
                      created: 1611114828
                      permission: READ
                      isIfaAudience: false
                      expireTimestamp: 1626753228
                      requestId: c10c3d86-f565-...
                      clickUrl: https://example.com/
                    - audienceGroupId: 2345678901234
                      createRoute: AD_MANAGER
                      type: APP_EVENT
                      description: audienceGroupName_02
                      status: READY
                      audienceCount: 3368
                      created: 1608619802
                      permission: READ
                      activated: 1610068515
                      inactiveTimestamp: 1625620516
                      isIfaAudience: false
                    hasNextPage: false
                    totalCount: 2
                    readWriteAudienceGroupTotalCount: 0
                    size: 40
                    page: 1
                NO_AUDIENCE:
                  summary: Example of when there is no audience that matches the specified
                    filter
                  value:
                    audienceGroups: []
                    hasNextPage: false
                    totalCount: 0
                    readWriteAudienceGroupTotalCount: 0
                    size: 40
                    page: 1
  /v2/bot/audienceGroup/authorityLevel:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-authority-level
      tags:
      - manage-audience
      operationId: getAudienceGroupAuthorityLevel
      description: Get the authority level of the audience
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAudienceGroupAuthorityLevelResponse'
              example:
                authorityLevel: PUBLIC
    put:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#change-authority-level
      tags:
      - manage-audience
      operationId: updateAudienceGroupAuthorityLevel
      description: Change the authority level of the audience
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAudienceGroupAuthorityLevelRequest'
        required: true
      responses:
        '200':
          description: OK
  /v2/bot/insight/demographic:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-demographic
      tags:
      - insight
      operationId: getFriendsDemographics
      description: 'Retrieves the demographic attributes for a LINE Official Account''s

        friends.You can only retrieve information about friends for LINE Official

        Accounts created by users in Japan (JP), Thailand (TH), Taiwan (TW) and Indonesia

        (ID).

        '
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFriendsDemographicsResponse'
              example:
                available: true
                genders:
                - gender: unknown
                  percentage: 37.6
                - gender: male
                  percentage: 31.8
                - gender: female
                  percentage: 30.6
                ages:
                - age: unknown
                  percentage: 37.6
                - age: from50
                  percentage: 17.3
                areas:
                - area: unknown
                  percentage: 42.9
                - area: "\u5FB3\u5CF6"
                  percentage: 2.9
                appTypes:
                - appType: ios
                  percentage: 62.4
                - appType: android
                  percentage: 27.7
                - appType: others
                  percentage: 9.9
                subscriptionPeriods:
                - subscriptionPeriod: over365days
                  percentage: 96.4
                - subscriptionPeriod: within365days
                  percentage: 1.9
                - subscriptionPeriod: within180days
                  percentage: 1.2
                - subscriptionPeriod: within90days
                  percentage: 0.5
                - subscriptionPeriod: within30days
                  percentage: 0.1
                - subscriptionPeriod: within7days
                  percentage: 0
          description: OK
  /v2/bot/insight/message/delivery:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-number-of-delivery-messages
      tags:
      - insight
      operationId: getNumberOfMessageDeliveries
      description: 'Returns the number of messages sent from LINE Official Account

        on a specified day.

        '
      parameters:
      - in: query
        name: date
        description: 'Date for which to retrieve number of sent messages.

          - Format: yyyyMMdd (e.g. 20191231)

          - Timezone: UTC+9

          '
        required: true
        schema:
          type: string
          pattern: ^[0-9]{8}$
          minLength: 8
          maxLength: 8
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNumberOfMessageDeliveriesResponse'
              example:
                status: ready
                broadcast: 5385
                targeting: 522
          description: OK
      summary: Get number of message deliveries
  /v2/bot/insight/followers:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-number-of-followers
      tags:
      - insight
      summary: Get number of followers
      description: 'Returns the number of users who have added the LINE Official Account

        on or before a specified date.

        '
      operationId: getNumberOfFollowers
      parameters:
      - in: query
        name: date
        required: false
        description: 'Date for which to retrieve the number of followers.


          Format: yyyyMMdd (e.g. 20191231)

          Timezone: UTC+9

          '
        schema:
          type: string
          pattern: ^[0-9]{8}$
          maxLength: 8
          minLength: 8
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNumberOfFollowersResponse'
              example:
                status: ready
                followers: 7620
                targetedReaches: 5848
                blocks: 237
  /v2/bot/insight/message/event:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-message-event
      tags:
      - insight
      description: 'Returns statistics about how users interact with narrowcast messages

        or broadcast messages sent from your LINE Official Account.

        '
      summary: Get user interaction statistics
      operationId: getMessageEvent
      parameters:
      - in: query
        name: requestId
        required: true
        description: 'Request ID of a narrowcast message or broadcast message.

          Each Messaging API request has a request ID.

          '
        schema:
          type: string
          minLength: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessageEventResponse'
              example:
                overview:
                  requestId: f70dd685-499a-4231-a441-f24b8d4fba21
                  timestamp: 1568214000
                  delivered: 320
                  uniqueImpression: 82
                  uniqueClick: 51
                  uniqueMediaPlayed: null
                  uniqueMediaPlayed100Percent: null
                messages:
                - seq: 1
                  impression: 136
                  mediaPlayed: null
                  mediaPlayed25Percent: null
                  mediaPlayed50Percent: null
                  mediaPlayed75Percent: null
                  mediaPlayed100Percent: null
                  uniqueMediaPlayed: null
                  uniqueMediaPlayed25Percent: null
                  uniqueMediaPlayed50Percent: null
                  uniqueMediaPlayed75Percent: null
                  uniqueMediaPlayed100Percent: null
                clicks:
                - seq: 1
                  url: https://line.me/
                  click: 41
                  uniqueClick: 30
                  uniqueClickOfRequest: 30
                - seq: 1
                  url: https://www.linebiz.com/
                  click: 59
                  uniqueClick: 38
                  uniqueClickOfRequest: 38
  /v2/bot/insight/message/event/aggregation:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-statistics-per-unit
      tags:
      - insight
      description: 'You can check the per-unit statistics of how users interact with

        push messages and multicast messages sent from your LINE Official Account.

        '
      operationId: getStatisticsPerUnit
      parameters:
      - in: query
        name: customAggregationUnit
        required: true
        description: 'Name of aggregation unit specified when sending the message.
          Case-sensitive.

          For example, `Promotion_a` and `Promotion_A` are regarded as different unit
          names.

          '
        schema:
          type: string
          pattern: ^[a-zA-Z0-9_]{1,30}$
          minLength: 1
          maxLength: 30
      - in: query
        name: from
        required: true
        description: 'Start date of aggregation period.


          Format: yyyyMMdd (e.g. 20210301)

          Time zone: UTC+9

          '
        schema:
          type: string
          pattern: ^[0-9]{8}$
          example: '20210301'
          minLength: 8
          maxLength: 8
      - in: query
        name: to
        required: true
        description: 'End date of aggregation period. The end date can be specified
          for up to 30 days later. For example, if the start date is 20210301, the
          latest end date is 20210331.


          Format: yyyyMMdd (e.g. 20210301)

          Time zone: UTC+9

          '
        schema:
          type: string
          pattern: ^[0-9]{8}$
          example: '20210301'
          minLength: 8
          maxLength: 8
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStatisticsPerUnitResponse'
              example:
                overview:
                  uniqueImpression: 40
                  uniqueClick: 30
                  uniqueMediaPlayed: 25
                  uniqueMediaPlayed100Percent: null
                messages:
                - seq: 1
                  impression: 42
                  mediaPlayed: 30
                  mediaPlayed25Percent: null
                  mediaPlayed50Percent: null
                  mediaPlayed75Percent: null
                  mediaPlayed100Percent: null
                  uniqueMediaPlayed: 25
                  uniqueMediaPlayed25Percent: null
                  uniqueMediaPlayed50Percent: null
                  uniqueMediaPlayed75Percent: null
                  uniqueMediaPlayed100Percent: null
                clicks:
                - seq: 1
                  url: https://developers.line.biz/
                  click: 35
                  uniqueClick: 25
                  uniqueClickOfRequest: null
                - seq: 1
                  url: https://www.line-community.me/
                  click: 29
                  uniqueClick: null
                  uniqueClickOfRequest: null
  /callback:
    post:
      operationId: callback
      tags:
      - dummy
      description: This is the dummy endpoint to generate the model classes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: dummy response
                type: string
                example: OK
  /v2/bot/channel/detach:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#unlink-detach-module-channel-by-operation-mc-admin
      tags:
      - line-module
      operationId: detachModule
      description: The module channel admin calls the Detach API to detach the module
        channel from a LINE Official Account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetachModuleRequest'
      responses:
        '200':
          description: OK
  /v2/bot/chat/{chatId}/control/acquire:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#acquire-control-api
      tags:
      - line-module
      operationId: acquireChatControl
      description: 'If the Standby Channel wants to take the initiative (Chat Control),
        it calls the Acquire Control API.

        The channel that was previously an Active Channel will automatically switch
        to a Standby Channel.

        '
      parameters:
      - name: chatId
        in: path
        required: true
        description: The `userId`, `roomId`, or `groupId`
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcquireChatControlRequest'
      responses:
        '200':
          description: OK
  /v2/bot/chat/{chatId}/control/release:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#release-control-api
      tags:
      - line-module
      operationId: releaseChatControl
      description: 'To return the initiative (Chat Control) of Active Channel to Primary
        Channel, call the Release Control API.

        '
      parameters:
      - name: chatId
        in: path
        required: true
        description: The `userId`, `roomId`, or `groupId`
        schema:
          type: string
      responses:
        '200':
          description: OK
  /v2/bot/list:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#get-multiple-bot-info-api
      tags:
      - line-module
      operationId: getModules
      description: Gets a list of basic information about the bots of multiple LINE
        Official Accounts that have attached module channels.
      parameters:
      - name: start
        in: query
        required: false
        description: 'Value of the continuation token found in the next property of
          the JSON object returned in the response.

          If you can''t get all basic information about the bots in one request, include
          this parameter to get the remaining array.

          '
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: 'Specify the maximum number of bots that you get basic information
          from. The default value is 100.

          Max value: 100

          '
        schema:
          type: integer
          format: int32
          default: 100
          maximum: 100
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModulesResponse'
              example:
                bots:
                - userId: Uf2dd6e8b081d2ff9c05c98a8a8b269c9
                  basicId: '@628...'
                  displayName: Test01
                  pictureUrl: https://profile.line-scdn.net/0hyxytJNAlJldEDQzlatVZAHhIKDoz...
                - userId: Ua831d37bfe8232808202b85127663f70
                  basicId: '@076lu...'
                  displayName: Test02
                  pictureUrl: https://profile.line-scdn.net/0hohnizdyzMEdTECbnVo9PEG9VPiok...
                - userId: Ub77ea431fba86f7c159a0c0f5be43d9f
                  basicId: '@290n...'
                  displayName: Test03
                - userId: Ub8ec80a14e879e9c6833fb4cee0e632b
                  basicId: '@793j...'
                  displayName: Test04
  /liff/v1/apps:
    post:
      operationId: addLIFFApp
      externalDocs:
        url: https://developers.line.biz/en/reference/liff-server/#add-liff-app
      summary: Create LIFF app
      tags:
      - liff
      description: Adding the LIFF app to a channel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddLiffAppRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddLiffAppResponse'
              example:
                liffId: '{liffId}'
        '400':
          description: 'This status code means one of the following:

            - The request contains an invalid value.

            - The maximum number of LIFF apps that can be added to the channel has
            been reached.

            '
        '401':
          description: 'Authentication failed.


            '
    get:
      operationId: getAllLIFFApps
      externalDocs:
        url: https://developers.line.biz/en/reference/liff-server/#get-all-liff-apps
      summary: Get all LIFF apps
      description: Gets information on all the LIFF apps added to the channel.
      tags:
      - liff
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllLiffAppsResponse'
              example:
                apps:
                - liffId: '{liffId}'
                  view:
                    type: full
                    url: https://example.com/myservice
                  description: Happy New York
                  permanentLinkPattern: concat
                - liffId: '{liffId}'
                  view:
                    type: tall
                    url: https://example.com/myservice2
                  features:
                    ble: true
                    qrCode: true
                  permanentLinkPattern: concat
                  scope:
                  - profile
                  - chat_message.write
                  botPrompt: none
        '401':
          description: 'Authentication failed.

            '
        '404':
          description: 'There is no LIFF app on the channel.




            '
  /liff/v1/apps/{liffId}:
    parameters:
    - name: liffId
      in: path
      required: true
      description: ID of the LIFF app to be updated
      schema:
        type: string
    put:
      operationId: updateLIFFApp
      externalDocs:
        url: https://developers.line.biz/en/reference/liff-server/#update-liff-app
      summary: Update LIFF app from a channel
      description: Update LIFF app settings
      tags:
      - liff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLiffAppRequest'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: 'The request contains an invalid value.

            '
        '401':
          description: 'Authentication failed.

            '
        '404':
          description: 'This status code means one of the following:

            - The specified LIFF app does not exist.

            - The specified LIFF app has been added to another channel.

            '
    delete:
      operationId: deleteLIFFApp
      externalDocs:
        url: https://developers.line.biz/en/reference/liff-server/#delete-liff-app
      summary: Delete LIFF app from a channel
      description: 'Deletes a LIFF app from a channel.

        '
      tags:
      - liff
      responses:
        '200':
          description: OK
        '401':
          description: 'Authentication failed.

            '
        '404':
          description: 'This status code means one of the following:

            - The specified LIFF app does not exist.

            - The specified LIFF app has been added to another channel.


            '
  /module/auth/v1/token:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#link-attach-by-operation-module-channel-provider
      tags:
      - line-module-attach
      operationId: attachModule
      description: Attach by operation of the module channel provider
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              description: request of the attachModule
              type: object
              properties:
                grant_type:
                  type: string
                  description: authorization_code
                  example: authorization_code
                code:
                  type: string
                  description: Authorization code received from the LINE Platform.
                redirect_uri:
                  type: string
                  description: Specify the redirect_uri specified in the URL for authentication
                    and authorization.
                code_verifier:
                  type: string
                  description: Specify when using PKCE (Proof Key for Code Exchange)
                    defined in the OAuth 2.0 extension specification as a countermeasure
                    against authorization code interception attacks.
                client_id:
                  type: string
                  description: 'Instead of using Authorization header, you can use
                    this parameter to specify the channel ID of the module channel.

                    You can find the channel ID of the module channel in the LINE
                    Developers Console.

                    '
                client_secret:
                  type: string
                  description: 'Instead of using Authorization header, you can use
                    this parameter to specify the channel secret of the module channel.

                    You can find the channel secret of the module channel in the LINE
                    Developers Console.

                    '
                region:
                  type: string
                  description: 'If you specified a value for region in the URL for
                    authentication and authorization, specify the same value.

                    '
                basic_search_id:
                  type: string
                  description: If you specified a value for basic_search_id in the
                    URL for authentication and authorization, specify the same value.
                scope:
                  type: string
                  description: If you specified a value for scope in the URL for authentication
                    and authorization, specify the same value.
                brand_type:
                  type: string
                  description: If you specified a value for brand_type in the URL
                    for authentication and authorization, specify the same value.
              required:
              - grant_type
              - code
              - redirect_uri
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachModuleResponse'
              example:
                bot_id: U45c5c51f0050ef0f0ee7261d57fd3c56
                scopes:
                - message:send
                - message:receive
          description: OK
  /shop/v3/mission:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#send-mission-stickers-v3
      tags:
      - shop
      operationId: missionStickerV3
      description: Sends a mission sticker.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MissionStickerRequest'
        required: true
      responses:
        '200':
          description: Returns status code 200 and an empty response body.
  /oauth2/v3/token:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token
      tags:
      - channel-access-token
      operationId: issueStatelessChannelToken
      description: 'Issues a new stateless channel access token, which doesn''t have
        max active token limit

        unlike the other token types.

        The newly issued token is only valid for 15 minutes but can not be revoked
        until it naturally expires.

        '
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
              - $ref: '#/components/schemas/IssueStatelessChannelTokenByJWTAssertionRequest'
              - $ref: '#/components/schemas/IssueStatelessChannelTokenByClientSecretRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueStatelessChannelAccessTokenResponse'
              example:
                token_type: Bearer
                access_token: eyJhbGciOiJIUz.....
                expires_in: 899
  /oauth2/v2.1/tokens/kid:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-all-valid-channel-access-token-key-ids-v2-1
      tags:
      - channel-access-token
      operationId: getsAllValidChannelAccessTokenKeyIds
      description: Gets all valid channel access token key IDs.
      parameters:
      - name: client_assertion_type
        in: query
        required: true
        description: '`urn:ietf:params:oauth:client-assertion-type:jwt-bearer`'
        schema:
          type: string
      - name: client_assertion
        in: query
        required: true
        description: A JSON Web Token (JWT) (opens new window)the client needs to
          create and sign with the private key.
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelAccessTokenKeyIdsResponse'
              example:
                kids:
                - U_gdnFYKTWRxxxxDVZexGg
                - sDTOzw5wIfWxxxxzcmeQA
                - 73hDyp3PxGfxxxxD6U5qYA
                - FHGanaP79smDxxxxyPrVw
                - CguB-0kxxxxdSM3A5Q_UtQ
                - G82YP96jhHwyKSxxxx7IFA
  /oauth2/v2.1/token:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1
      tags:
      - channel-access-token
      operationId: issueChannelTokenByJWT
      description: Issues a channel access token that allows you to specify a desired
        expiration date. This method lets you use JWT assertion for authentication.
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              description: request of the issueChannelTokenByJWT
              type: object
              properties:
                grant_type:
                  type: string
                  description: client_credentials
                client_assertion_type:
                  type: string
                  description: urn:ietf:params:oauth:client-assertion-type:jwt-bearer
                client_assertion:
                  type: string
                  description: A JSON Web Token the client needs to create and sign
                    with the private key of the Assertion Signing Key.
              required:
              - grant_type
              - client_assertion_type
              - client_assertion
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueChannelAccessTokenResponse'
              example:
                access_token: eyJhbGciOiJIUz.....
                token_type: Bearer
                expires_in: 2592000
                key_id: sDTOzw5wIfxxxxPEzcmeQA
  /oauth2/v2.1/verify:
    get:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#verify-channel-access-token-v2-1
      tags:
      - channel-access-token
      operationId: verifyChannelTokenByJWT
      description: You can verify whether a Channel access token with a user-specified
        expiration (Channel Access Token v2.1) is valid.
      parameters:
      - name: access_token
        in: query
        required: true
        description: Channel access token with a user-specified expiration (Channel
          Access Token v2.1).
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyChannelAccessTokenResponse'
              example:
                client_id: '1573163733'
                expires_in: 2591659
                scope: profile chat_message.write
  /oauth2/v2.1/revoke:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#revoke-channel-access-token-v2-1
      tags:
      - channel-access-token
      operationId: revokeChannelTokenByJWT
      description: Revoke channel access token v2.1
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              description: Request of the revokeChannelTokenByJWT
              type: object
              properties:
                client_id:
                  type: string
                  description: Channel ID
                client_secret:
                  type: string
                  description: Channel Secret
                access_token:
                  type: string
                  description: Channel access token
              required:
              - client_id
              - client_secret
              - access_token
      responses:
        '200':
          description: OK
  /v2/oauth/accessToken:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#issue-shortlived-channel-access-token
      tags:
      - channel-access-token
      operationId: issueChannelToken
      description: Issue short-lived channel access token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              description: Request of the issueChannelToken
              type: object
              properties:
                grant_type:
                  type: string
                  description: '`client_credentials`'
                  example: client_credentials
                client_id:
                  type: string
                  description: Channel ID.
                client_secret:
                  type: string
                  description: Channel secret.
              required:
              - grant_type
              - client_id
              - client_secret
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueShortLivedChannelAccessTokenResponse'
              example:
                access_token: W1TeHCgfH2Liwa.....
                expires_in: 2592000
                token_type: Bearer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: invalid_request
                error_description: some parameters missed or invalid
  /v2/oauth/verify:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#verify-channel-access-token
      tags:
      - channel-access-token
      operationId: verifyChannelToken
      description: Verify the validity of short-lived and long-lived channel access
        tokens
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              description: request of the verifyChannelToken
              type: object
              properties:
                access_token:
                  description: A short-lived or long-lived channel access token.
                  type: string
              required:
              - access_token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyChannelAccessTokenResponse'
              example:
                client_id: '1350031035'
                expires_in: 3138007490
                scope: P CM
  /v2/oauth/revoke:
    post:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#revoke-longlived-or-shortlived-channel-access-token
      tags:
      - channel-access-token
      operationId: revokeChannelToken
      description: Revoke short-lived or long-lived channel access token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              description: Request of the revokeChannelToken.
              type: object
              properties:
                access_token:
                  description: Channel access token
                  type: string
              required:
              - access_token
      responses:
        '200':
          description: OK
components:
  schemas:
    GetWebhookEndpointResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-webhook-endpoint-information
      required:
      - endpoint
      - active
      type: object
      properties:
        endpoint:
          type: string
          format: uri
          description: Webhook URL
        active:
          type: boolean
          description: 'Webhook usage status. Send a webhook event from the LINE Platform
            to the webhook URL only if enabled.


            `true`: Webhook usage is enabled.

            `false`: Webhook usage is disabled.

            '
    SetWebhookEndpointRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#set-webhook-endpoint-url
      required:
      - endpoint
      type: object
      properties:
        endpoint:
          maxLength: 500
          minLength: 0
          type: string
          format: uri
          description: A valid webhook URL.
    TestWebhookEndpointRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#test-webhook-endpoint
      type: object
      properties:
        endpoint:
          maxLength: 500
          minLength: 0
          type: string
          format: uri
          description: A webhook URL to be validated.
    TestWebhookEndpointResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#test-webhook-endpoint
      required:
      - statusCode
      - timestamp
      - reason
      - detail
      type: object
      properties:
        success:
          type: boolean
          description: Result of the communication from the LINE platform to the webhook
            URL.
        timestamp:
          type: string
          format: date-time
          description: 'Time of the event in milliseconds. Even in the case of a redelivered
            webhook, it represents the time the event occurred, not the time it was
            redelivered.

            '
        statusCode:
          type: integer
          format: int32
          description: The HTTP status code. If the webhook response isn't received,
            the status code is set to zero or a negative number.
        reason:
          type: string
          description: Reason for the response.
        detail:
          type: string
          description: Details of the response.
    GetMessageContentTranscodingResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#verify-video-or-audio-preparation-status
      description: Transcoding response
      required:
      - status
      type: object
      properties:
        status:
          type: string
          description: 'The preparation status. One of:


            `processing`: Preparing to get content.

            `succeeded`: Ready to get the content. You can get the content sent by
            users.

            `failed`: Failed to prepare to get the content.

            '
          enum:
          - processing
          - succeeded
          - failed
    ReplyMessageRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-reply-message
      required:
      - messages
      - replyToken
      type: object
      properties:
        replyToken:
          type: string
          description: replyToken received via webhook.
        messages:
          description: List of messages.
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Message'
        notificationDisabled:
          $ref: '#/components/schemas/NotificationDisabled'
    ReplyMessageResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-reply-message-response
      required:
      - sentMessages
      type: object
      properties:
        sentMessages:
          description: Array of sent messages.
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SentMessage'
    SentMessage:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: ID of the sent message.
        quoteToken:
          type: string
          description: 'Quote token of the message. Only included when a message object
            that can be specified as a quote target was sent as a push or reply message.

            '
    PushMessageRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-push-message
      required:
      - messages
      - to
      type: object
      properties:
        to:
          type: string
          description: ID of the receiver.
        messages:
          description: List of Message objects.
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Message'
        notificationDisabled:
          $ref: '#/components/schemas/NotificationDisabled'
        customAggregationUnits:
          description: 'List of aggregation unit name. Case-sensitive.

            This functions can only be used by corporate users who have submitted
            the required applications.

            '
          type: array
          items:
            type: string
    NotificationDisabled:
      type: boolean
      default: false
      description: "`true`: The user doesn\u2019t receive a push notification when\
        \ a message is sent.\n`false`: The user receives a push notification when\
        \ the message is sent (unless they have disabled push notifications in LINE\
        \ and/or their device).\nThe default value is false.\n"
    PushMessageResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-push-message-response
      required:
      - sentMessages
      type: object
      properties:
        sentMessages:
          description: Array of sent messages.
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SentMessage'
    MulticastRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-multicast-message
      required:
      - messages
      - to
      type: object
      properties:
        messages:
          maxItems: 5
          minItems: 1
          type: array
          description: Messages to send
          items:
            $ref: '#/components/schemas/Message'
        to:
          maxItems: 500
          minItems: 1
          type: array
          description: Array of user IDs. Use userId values which are returned in
            webhook event objects. Do not use LINE IDs found on LINE.
          items:
            type: string
        notificationDisabled:
          $ref: '#/components/schemas/NotificationDisabled'
        customAggregationUnits:
          type: array
          maxItems: 1
          description: Name of aggregation unit. Case-sensitive.
          items:
            type: string
            maxLength: 30
            minLength: 1
            pattern: ^[a-zA-Z0-9_]{1,30}$
    MulticastResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-multicast-response
      type: object
    NarrowcastRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-narrowcast-message
      required:
      - messages
      type: object
      properties:
        messages:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: List of Message objects.
        recipient:
          $ref: '#/components/schemas/Recipient'
        filter:
          $ref: '#/components/schemas/Filter'
        limit:
          $ref: '#/components/schemas/Limit'
        notificationDisabled:
          $ref: '#/components/schemas/NotificationDisabled'
    NarrowcastResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-narrowcast-response
      type: object
    Recipient:
      type: object
      description: Recipient
      properties:
        type:
          description: Type of recipient
          type: string
      discriminator:
        propertyName: type
        mapping:
          operator: '#/components/schemas/OperatorRecipient'
          audience: '#/components/schemas/AudienceRecipient'
          redelivery: '#/components/schemas/RedeliveryRecipient'
    OperatorRecipient:
      type: object
      allOf:
      - $ref: '#/components/schemas/Recipient'
      - type: object
        properties:
          and:
            type: array
            items:
              $ref: '#/components/schemas/Recipient'
            description: 'Create a new recipient object by taking the logical conjunction
              (AND) of the specified array of recipient objects.

              '
          or:
            type: array
            items:
              $ref: '#/components/schemas/Recipient'
            description: 'Create a new recipient object by taking the logical disjunction
              (OR) of the specified array of recipient objects.

              '
          not:
            $ref: '#/components/schemas/Recipient'
    AudienceRecipient:
      type: object
      allOf:
      - $ref: '#/components/schemas/Recipient'
      - type: object
        properties:
          audienceGroupId:
            type: integer
            format: int64
    RedeliveryRecipient:
      type: object
      allOf:
      - $ref: '#/components/schemas/Recipient'
      - type: object
        properties:
          requestId:
            type: string
    Filter:
      type: object
      description: Filter for narrowcast
      properties:
        demographic:
          $ref: '#/components/schemas/DemographicFilter'
    DemographicFilter:
      type: object
      description: Demographic filter
      properties:
        type:
          type: string
          description: Type of demographic filter
      discriminator:
        propertyName: type
        mapping:
          age: '#/components/schemas/AgeDemographicFilter'
          appType: '#/components/schemas/AppTypeDemographicFilter'
          area: '#/components/schemas/AreaDemographicFilter'
          gender: '#/components/schemas/GenderDemographicFilter'
          operator: '#/components/schemas/OperatorDemographicFilter'
          subscriptionPeriod: '#/components/schemas/SubscriptionPeriodDemographicFilter'
    AgeDemographicFilter:
      type: object
      allOf:
      - $ref: '#/components/schemas/DemographicFilter'
      - type: object
        properties:
          gte:
            $ref: '#/components/schemas/AgeDemographic'
          lt:
            $ref: '#/components/schemas/AgeDemographic'
    AgeDemographic:
      type: string
      enum:
      - age_15
      - age_20
      - age_25
      - age_30
      - age_35
      - age_40
      - age_45
      - age_50
      - age_55
      - age_60
      - age_65
      - age_70
    AppTypeDemographicFilter:
      type: object
      allOf:
      - $ref: '#/components/schemas/DemographicFilter'
      - type: object
        properties:
          oneOf:
            type: array
            items:
              $ref: '#/components/schemas/AppTypeDemographic'
    AppTypeDemographic:
      type: string
      enum:
      - ios
      - android
    AreaDemographicFilter:
      type: object
      allOf:
      - $ref: '#/components/schemas/DemographicFilter'
      - type: object
        properties:
          oneOf:
            type: array
            items:
              $ref: '#/components/schemas/AreaDemographic'
    AreaDemographic:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-narrowcast-message
      type: string
      enum:
      - jp_01
      - jp_02
      - jp_03
      - jp_04
      - jp_05
      - jp_06
      - jp_07
      - jp_08
      - jp_09
      - jp_10
      - jp_11
      - jp_12
      - jp_13
      - jp_14
      - jp_15
      - jp_16
      - jp_17
      - jp_18
      - jp_19
      - jp_20
      - jp_21
      - jp_22
      - jp_23
      - jp_24
      - jp_25
      - jp_26
      - jp_27
      - jp_28
      - jp_29
      - jp_30
      - jp_31
      - jp_32
      - jp_33
      - jp_34
      - jp_35
      - jp_36
      - jp_37
      - jp_38
      - jp_39
      - jp_40
      - jp_41
      - jp_42
      - jp_43
      - jp_44
      - jp_45
      - jp_46
      - jp_47
      - tw_01
      - tw_02
      - tw_03
      - tw_04
      - tw_05
      - tw_06
      - tw_07
      - tw_08
      - tw_09
      - tw_10
      - tw_11
      - tw_12
      - tw_13
      - tw_14
      - tw_15
      - tw_16
      - tw_17
      - tw_18
      - tw_19
      - tw_20
      - tw_21
      - tw_22
      - th_01
      - th_02
      - th_03
      - th_04
      - th_05
      - th_06
      - th_07
      - th_08
      - id_01
      - id_02
      - id_03
      - id_04
      - id_05
      - id_06
      - id_07
      - id_08
      - id_09
      - id_10
      - id_11
      - id_12
      x-enum-varnames:
      - HOKKAIDO
      - AOMORI
      - IWATE
      - MIYAGI
      - AKITA
      - YAMAGATA
      - FUKUSHIMA
      - IBARAKI
      - TOCHIGI
      - GUNMA
      - SAITAMA
      - CHIBA
      - TOKYO
      - KANAGAWA
      - NIIGATA
      - TOYAMA
      - ISHIKAWA
      - FUKUI
      - YAMANASHI
      - NAGANO
      - GIFU
      - SHIZUOKA
      - AICHI
      - MIE
      - SHIGA
      - KYOTO
      - OSAKA
      - HYOUGO
      - NARA
      - WAKAYAMA
      - TOTTORI
      - SHIMANE
      - OKAYAMA
      - HIROSHIMA
      - YAMAGUCHI
      - TOKUSHIMA
      - KAGAWA
      - EHIME
      - KOUCHI
      - FUKUOKA
      - SAGA
      - NAGASAKI
      - KUMAMOTO
      - OITA
      - MIYAZAKI
      - KAGOSHIMA
      - OKINAWA
      - TAIPEI_CITY
      - NEW_TAIPEI_CITY
      - TAOYUAN_CITY
      - TAICHUNG_CITY
      - TAINAN_CITY
      - KAOHSIUNG_CITY
      - KEELUNG_CITY
      - HSINCHU_CITY
      - CHIAYI_CITY
      - HSINCHU_COUNTY
      - MIAOLI_COUNTY
      - CHANGHUA_COUNTY
      - NANTOU_COUNTY
      - YUNLIN_COUNTY
      - CHIAYI_COUNTY
      - PINGTUNG_COUNTY
      - YILAN_COUNTY
      - HUALIEN_COUNTY
      - TAITUNG_COUNTY
      - PENGHU_COUNTY
      - KINMEN_COUNTY
      - LIENCHIANG_COUNTY
      - BANGKOK
      - PATTAYA
      - NORTHERN
      - CENTRAL
      - SOUTHERN
      - EASTERN
      - NORTHEASTERN
      - WESTERN
      - BALI
      - BANDUNG
      - BANJARMASIN
      - JABODETABEK
      - MAKASSAR
      - MEDAN
      - PALEMBANG
      - SAMARINDA
      - SEMARANG
      - SURABAYA
      - YOGYAKARTA
      - LAINNYA
      x-enum-descriptions:
      - "jp_01: \u5317\u6D77\u9053 // Hokkaido"
      - "jp_02: \u9752\u68EE\u770C // Aomori"
      - "jp_03: \u5CA9\u624B\u770C // Iwate"
      - "jp_04: \u5BAE\u57CE\u770C // Miyagi"
      - "jp_05: \u79CB\u7530\u770C // Akita"
      - "jp_06: \u5C71\u5F62\u770C // Yamagata"
      - "jp_07: \u798F\u5CF6\u770C // Fukushima"
      - "jp_08: \u8328\u57CE\u770C // Ibaraki"
      - "jp_09: \u6803\u6728\u770C // Tochigi"
      - "jp_10: \u7FA4\u99AC\u770C // Gunma"
      - "jp_11: \u57FC\u7389\u770C // Saitama"
      - "jp_12: \u5343\u8449\u770C // Chiba"
      - "jp_13: \u6771\u4EAC\u90FD // Tokyo"
      - "jp_14: \u795E\u5948\u5DDD\u770C // Kanagawa"
      - "jp_15: \u65B0\u6F5F\u770C // Niigata"
      - "jp_16: \u5BCC\u5C71\u770C // Toyama"
      - "jp_17: \u77F3\u5DDD\u770C // Ishikawa"
      - "jp_18: \u798F\u4E95\u770C // Fukui"
      - "jp_19: \u5C71\u68A8\u770C // Yamanashi"
      - "jp_20: \u9577\u91CE\u770C // Nagano"
      - "jp_21: \u5C90\u961C\u770C // Gifu"
      - "jp_22: \u9759\u5CA1\u770C // Shizuoka"
      - "jp_23: \u611B\u77E5\u770C // Aichi"
      - "jp_24: \u4E09\u91CD\u770C // Mie"
      - "jp_25: \u6ECB\u8CC0\u770C // Shiga"
      - "jp_26: \u4EAC\u90FD\u5E9C // Kyoto"
      - "jp_27: \u5927\u962A\u5E9C // Osaka"
      - "jp_28: \u5175\u5EAB\u770C // Hyougo"
      - "jp_29: \u5948\u826F\u770C // Nara"
      - "jp_30: \u548C\u6B4C\u5C71\u770C // Wakayama"
      - "jp_31: \u9CE5\u53D6\u770C // Tottori"
      - "jp_32: \u5CF6\u6839\u770C // Shimane"
      - "jp_33: \u5CA1\u5C71\u770C // Okayama"
      - "jp_34: \u5E83\u5CF6\u770C // Hiroshima"
      - "jp_35: \u5C71\u53E3\u770C // Yamaguchi"
      - "jp_36: \u5FB3\u5CF6\u770C // Tokushima"
      - "jp_37: \u9999\u5DDD\u770C // Kagawa"
      - "jp_38: \u611B\u5A9B\u770C // Ehime"
      - "jp_39: \u9AD8\u77E5\u770C // Kouchi"
      - "jp_40: \u798F\u5CA1\u770C // Fukuoka"
      - "jp_41: \u4F50\u8CC0\u770C // Saga"
      - "jp_42: \u9577\u5D0E\u770C // Nagasaki"
      - "jp_43: \u718A\u672C\u770C // Kumamoto"
      - "jp_44: \u5927\u5206\u770C // Oita"
      - "jp_45: \u5BAE\u5D0E\u770C // Miyazaki"
      - "jp_46: \u9E7F\u5150\u5CF6\u770C // Kagoshima"
      - "jp_47: \u6C96\u7E04\u770C // Okinawa"
      - "tw_01: \u53F0\u5317\u5E02 // Taipei City"
      - "tw_02: \u65B0\u5317\u5E02 // New Taipei City"
      - "tw_03: \u6843\u5712\u5E02 // Taoyuan City"
      - "tw_04: \u53F0\u4E2D\u5E02 // Taichung City"
      - "tw_05: \u53F0\u5357\u5E02 // Tainan City"
      - "tw_06: \u9AD8\u96C4\u5E02 // Kaohsiung City"
      - "tw_07: \u57FA\u9686\u5E02 // Keelung City"
      - "tw_08: \u65B0\u7AF9\u5E02 // Hsinchu City"
      - "tw_09: \u5609\u7FA9\u5E02 // Chiayi City"
      - "tw_10: \u65B0\u7AF9\u770C // Hsinchu County"
      - "tw_11: \u82D7\u6817\u770C // Miaoli County"
      - "tw_12: \u5F70\u5316\u770C // Changhua County"
      - "tw_13: \u5357\u6295\u770C // Nantou County"
      - "tw_14: \u96F2\u6797\u770C // Yunlin County"
      - "tw_15: \u5609\u7FA9\u770C // Chiayi County"
      - "tw_16: \u5C4F\u6771\u770C // Pingtung County"
      - "tw_17: \u5B9C\u862D\u770C // Yilan County"
      - "tw_18: \u82B1\u84EE\u770C // Hualien County"
      - "tw_19: \u53F0\u6771\u770C // Taitung County"
      - "tw_20: \u6F8E\u6E56\u770C // Penghu County"
      - "tw_21: \u91D1\u9580\u770C // Kinmen County"
      - "tw_22: \u9023\u6C5F\u770C // Lienchiang County"
      - "th_01: \u30D0\u30F3\u30B3\u30AF // Bangkok"
      - "th_02: \u30D1\u30BF\u30E4 // Pattaya"
      - "th_03: \u5317\u90E8 // Northern"
      - "th_04: \u4E2D\u592E\u90E8 // Central"
      - "th_05: \u5357\u90E8 // Southern"
      - "th_06: \u6771\u90E8 // Eastern"
      - "th_07: \u6771\u5317\u90E8 // NorthEastern"
      - "th_08: \u897F\u90E8 // Western"
      - "id_01: \u30D0\u30EA // Bali"
      - "id_02: \u30D0\u30F3\u30C9\u30F3 // Bandung"
      - "id_03: \u30D0\u30F3\u30B8\u30E3\u30EB\u30DE\u30B7\u30F3 // Banjarmasin"
      - "id_04: \u30B8\u30E3\u30DC\u30C7\u30BF\u30D9\u30C3\u30AF (\u30B8\u30E3\u30AB\
        \u30EB\u30BF\u9996\u90FD\u570F) // Jabodetabek"
      - "id_06: \u30DE\u30AB\u30C3\u30B5\u30EB // Makassar"
      - "id_07: \u30E1\u30C0\u30F3 // Medan"
      - "id_08: \u30D1\u30EC\u30F3\u30D0\u30F3 // Palembang"
      - "id_09: \u30B5\u30DE\u30EA\u30F3\u30C0 // Samarinda"
      - "id_10: \u30B9\u30DE\u30E9\u30F3 // Semarang"
      - "id_11: \u30B9\u30E9\u30D0\u30E4 // Surabaya"
      - "id_12: \u30B8\u30E7\u30B0\u30B8\u30E3\u30AB\u30EB\u30BF // Yogyakarta"
      - "id_05: \u305D\u306E\u4ED6\u306E\u30A8\u30EA\u30A2 // Lainnya"
    GenderDemographicFilter:
      type: object
      allOf:
      - $ref: '#/components/schemas/DemographicFilter'
      - type: object
        properties:
          oneOf:
            type: array
            items:
              $ref: '#/components/schemas/GenderDemographic'
    GenderDemographic:
      type: string
      enum:
      - male
      - female
    OperatorDemographicFilter:
      type: object
      allOf:
      - $ref: '#/components/schemas/DemographicFilter'
      - type: object
        properties:
          and:
            type: array
            items:
              $ref: '#/components/schemas/DemographicFilter'
          or:
            type: array
            items:
              $ref: '#/components/schemas/DemographicFilter'
          not:
            $ref: '#/components/schemas/DemographicFilter'
    SubscriptionPeriodDemographicFilter:
      type: object
      allOf:
      - $ref: '#/components/schemas/DemographicFilter'
      - type: object
        properties:
          gte:
            $ref: '#/components/schemas/SubscriptionPeriodDemographic'
          lt:
            $ref: '#/components/schemas/SubscriptionPeriodDemographic'
    SubscriptionPeriodDemographic:
      type: string
      enum:
      - day_7
      - day_30
      - day_90
      - day_180
      - day_365
    Limit:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-narrowcast-message
      type: object
      description: Limit of the Narrowcast
      properties:
        max:
          minimum: 1
          type: integer
          format: int32
          description: 'The maximum number of narrowcast messages to send.

            Use this parameter to limit the number of narrowcast messages sent.

            The recipients will be chosen at random.

            '
        upToRemainingQuota:
          type: boolean
          default: false
          description: 'If true, the message will be sent within the maximum number
            of deliverable messages. The default value is `false`.


            Targets will be selected at random.

            '
    NarrowcastProgressResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-narrowcast-progress-status
      required:
      - phase
      - acceptedTime
      type: object
      properties:
        phase:
          type: string
          enum:
          - waiting
          - sending
          - succeeded
          - failed
          description: 'The current status. One of:


            `waiting`: Messages are not yet ready to be sent. They are currently being
            filtered or processed in some way.

            `sending`: Messages are currently being sent.

            `succeeded`: Messages were sent successfully. This may not mean the messages
            were successfully received.

            `failed`: Messages failed to be sent. Use the failedDescription property
            to find the cause of the failure.

            '
        successCount:
          type: integer
          format: int64
          description: The number of users who successfully received the message.
        failureCount:
          type: integer
          format: int64
          description: The number of users who failed to send the message.
        targetCount:
          type: integer
          format: int64
          description: The number of intended recipients of the message.
        failedDescription:
          type: string
          description: The reason the message failed to be sent. This is only included
            with a `phase` property value of `failed`.
        errorCode:
          type: integer
          format: int64
          description: 'Error summary. This is only included with a phase property
            value of failed.

            One of:


            `1`: An internal error occurred.

            `2`: An error occurred because there weren''t enough recipients.

            `3`: A conflict error of requests occurs because a request that has already
            been accepted is retried.

            `4`: An audience of less than 50 recipients is included as a condition
            of sending.

            '
        acceptedTime:
          type: string
          format: date-time
          description: 'Narrowcast message request accepted time in milliseconds.


            Format: ISO 8601 (e.g. 2020-12-03T10:15:30.121Z)

            Timezone: UTC

            '
        completedTime:
          type: string
          format: date-time
          description: 'Processing of narrowcast message request completion time in
            milliseconds. Returned when the phase property is succeeded or failed.


            Format: ISO 8601 (e.g. 2020-12-03T10:15:30.121Z)

            Timezone: UTC

            '
    BroadcastRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-broadcast-message
      required:
      - messages
      type: object
      properties:
        messages:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: List of Message objects.
        notificationDisabled:
          $ref: '#/components/schemas/NotificationDisabled'
    BroadcastResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#send-broadcast-response
      type: object
    MessageQuotaResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-quota
      required:
      - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/QuotaType'
        value:
          type: integer
          format: int64
          description: 'The target limit for sending messages in the current month.
            This property is returned when the `type` property has a value of `limited`.

            '
    QuotaType:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-quota
      type: string
      enum:
      - none
      - limited
      description: One of the following values to indicate whether a target limit
        is set or not.
    QuotaConsumptionResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-consumption
      required:
      - totalUsage
      type: object
      properties:
        totalUsage:
          type: integer
          format: int64
          description: The number of sent messages in the current month
    NumberOfMessagesResponse:
      required:
      - status
      type: object
      properties:
        status:
          type: string
          enum:
          - ready
          - unready
          - unavailable_for_privacy
          - out_of_service
          description: 'Aggregation process status. One of:


            `ready`: The number of messages can be obtained.

            `unready`: We haven''t finished calculating the number of sent messages
            for the specified in date. For example, this property is returned when
            the delivery date or a future date is specified. Calculation usually takes
            about a day.

            `unavailable_for_privacy`: The total number of messages on the specified
            day is less than 20.

            `out_of_service`: The specified date is earlier than the date on which
            we first started calculating sent messages (March 31, 2018).

            '
        success:
          type: integer
          format: int64
          description: 'The number of messages delivered using the phone number on
            the date specified in `date`.

            The response has this property only when the value of `status` is `ready`.


            '
    ValidateMessageRequest:
      required:
      - messages
      type: object
      properties:
        messages:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: Array of message objects to validate
    GetAggregationUnitUsageResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-number-of-units-used-this-month
      required:
      - numOfCustomAggregationUnits
      type: object
      properties:
        numOfCustomAggregationUnits:
          type: integer
          format: int64
          description: Number of aggregation units used this month.
    GetAggregationUnitNameListResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-name-list-of-units-used-this-month
      required:
      - customAggregationUnits
      type: object
      properties:
        customAggregationUnits:
          type: array
          items:
            type: string
          description: An array of strings indicating the names of aggregation units
            used this month.
        next:
          type: string
          description: 'A continuation token to get the next array of unit names.

            Returned only when there are remaining aggregation units that weren''t
            returned in customAggregationUnits in the original request.


            '
    UserProfileResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-profile
      required:
      - displayName
      - userId
      type: object
      properties:
        displayName:
          type: string
          description: User's display name
        userId:
          type: string
          description: User ID
        pictureUrl:
          type: string
          format: uri
          description: Profile image URL. `https` image URL. Not included in the response
            if the user doesn't have a profile image.
        statusMessage:
          type: string
          description: User's status message. Not included in the response if the
            user doesn't have a status message.
        language:
          type: string
          description: User's language, as a BCP 47 language tag. Not included in
            the response if the user hasn't yet consented to the LINE Privacy Policy.
          example: en
    GetFollowersResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-follower-ids
      required:
      - userIds
      type: object
      properties:
        userIds:
          type: array
          maxItems: 1000
          description: 'An array of strings indicating user IDs of users that have
            added the LINE Official Account as a friend.

            Only users of LINE for iOS and LINE for Android are included in `userIds`.

            '
          items:
            type: string
        next:
          type: string
          description: 'A continuation token to get the next array of user IDs.

            Returned only when there are remaining user IDs that weren''t returned
            in `userIds` in the original request.

            The number of user IDs in the `userIds` element doesn''t have to reach
            the maximum number specified by `limit` for the `next` property to be
            included in the response.


            '
    BotInfoResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-bot-info
      required:
      - userId
      - basicId
      - displayName
      - chatMode
      - markAsReadMode
      type: object
      properties:
        userId:
          type: string
          description: Bot's user ID
        basicId:
          type: string
          description: Bot's basic ID
        premiumId:
          type: string
          description: Bot's premium ID. Not included in the response if the premium
            ID isn't set.
        displayName:
          type: string
          description: Bot's display name
        pictureUrl:
          type: string
          format: uri
          description: Profile image URL. `https` image URL. Not included in the response
            if the bot doesn't have a profile image.
        chatMode:
          type: string
          enum:
          - chat
          - bot
          description: 'Chat settings set in the LINE Official Account Manager. One
            of:


            `chat`: Chat is set to "On".

            `bot`: Chat is set to "Off".

            '
        markAsReadMode:
          type: string
          enum:
          - auto
          - manual
          description: 'Automatic read setting for messages. If the chat is set to
            "Off", auto is returned. If the chat is set to "On", manual is returned.


            `auto`: Auto read setting is enabled.

            `manual`: Auto read setting is disabled.


            '
    GroupUserProfileResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-group-member-profile
      required:
      - displayName
      - userId
      type: object
      properties:
        displayName:
          type: string
          description: User's display name
        userId:
          type: string
          description: User ID
        pictureUrl:
          type: string
          format: uri
          description: Profile image URL. `https` image URL. Not included in the response
            if the user doesn't have a profile image.
    RoomUserProfileResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-room-member-profile
      required:
      - displayName
      - userId
      type: object
      properties:
        displayName:
          type: string
          description: User's display name
        userId:
          type: string
          description: User ID
        pictureUrl:
          type: string
          format: uri
          description: Profile image URL. `https` image URL. Not included in the response
            if the user doesn't have a profile image.
    MembersIdsResponse:
      required:
      - memberIds
      type: object
      properties:
        memberIds:
          type: array
          description: List of user IDs of members in the group chat. Only users of
            LINE for iOS and LINE for Android are included in `memberIds`.
          items:
            type: string
          maxItems: 100
        next:
          type: string
          description: 'A continuation token to get the next array of user IDs of
            the members in the group chat.

            Returned only when there are remaining user IDs that were not returned
            in `memberIds` in the original request.

            '
    GroupSummaryResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-group-summary
      required:
      - groupId
      - groupName
      type: object
      properties:
        groupId:
          type: string
          description: Group ID
        groupName:
          type: string
          description: Group name
        pictureUrl:
          type: string
          format: uri
          description: Group icon URL. Not included in the response if the user doesn't
            set a group profile icon.
    GroupMemberCountResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-members-group-count
      required:
      - count
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: The count of members in the group chat. The number returned
            excludes the LINE Official Account.
    RoomMemberCountResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-members-room-count
      required:
      - count
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: The count of members in the multi-person chat. The number returned
            excludes the LINE Official Account.
    RichMenuRequest:
      type: object
      properties:
        size:
          $ref: '#/components/schemas/RichMenuSize'
        selected:
          type: boolean
          description: '`true` to display the rich menu by default. Otherwise, `false`.'
        name:
          type: string
          description: Name of the rich menu. This value can be used to help manage
            your rich menus and is not displayed to users.
          maxLength: 300
        chatBarText:
          type: string
          description: Text displayed in the chat bar
          maxLength: 14
        areas:
          type: array
          description: Array of area objects which define the coordinates and size
            of tappable areas
          items:
            $ref: '#/components/schemas/RichMenuArea'
    RichMenuSize:
      type: object
      description: Rich menu size
      properties:
        width:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int64
          description: width
        height:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int64
          description: height
    RichMenuArea:
      type: object
      description: Rich menu area
      properties:
        bounds:
          $ref: '#/components/schemas/RichMenuBounds'
        action:
          $ref: '#/components/schemas/Action'
    RichMenuBounds:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#bounds-object
      type: object
      description: Rich menu bounds
      properties:
        x:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int64
          description: Horizontal position relative to the top-left corner of the
            area.
        y:
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int64
          description: Vertical position relative to the top-left corner of the area.
        width:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int64
          description: Width of the area.
        height:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int64
          description: Height of the area.
    RichMenuIdResponse:
      required:
      - richMenuId
      type: object
      properties:
        richMenuId:
          type: string
          description: Rich menu ID
    RichMenuResponse:
      required:
      - richMenuId
      - size
      - selected
      - name
      - chatBarText
      - areas
      type: object
      properties:
        richMenuId:
          type: string
          description: ID of a rich menu
        size:
          $ref: '#/components/schemas/RichMenuSize'
        selected:
          type: boolean
          description: '`true` to display the rich menu by default. Otherwise, `false`.'
        name:
          type: string
          description: Name of the rich menu. This value can be used to help manage
            your rich menus and is not displayed to users.
          maxLength: 300
        chatBarText:
          type: string
          description: Text displayed in the chat bar
          maxLength: 14
        areas:
          type: array
          items:
            $ref: '#/components/schemas/RichMenuArea'
          description: Array of area objects which define the coordinates and size
            of tappable areas
          maxItems: 20
    RichMenuListResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-list
      required:
      - richmenus
      type: object
      properties:
        richmenus:
          type: array
          items:
            $ref: '#/components/schemas/RichMenuResponse'
          description: Rich menus
    CreateRichMenuAliasRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-rich-menu-alias
      required:
      - richMenuAliasId
      - richMenuId
      type: object
      properties:
        richMenuAliasId:
          type: string
          description: Rich menu alias ID, which can be any ID, unique for each channel.
          maxLength: 32
          minLength: 1
          pattern: ^[a-z0-9_-]{1,32}$
        richMenuId:
          type: string
          description: The rich menu ID to be associated with the rich menu alias.
    RichMenuAliasResponse:
      required:
      - richMenuAliasId
      - richMenuId
      type: object
      properties:
        richMenuAliasId:
          type: string
          description: Rich menu alias ID.
        richMenuId:
          type: string
          description: The rich menu ID associated with the rich menu alias.
    UpdateRichMenuAliasRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#update-rich-menu-alias
      required:
      - richMenuId
      type: object
      properties:
        richMenuId:
          type: string
          description: The rich menu ID to be associated with the rich menu alias.
    RichMenuAliasListResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-rich-menu-alias-list
      required:
      - aliases
      type: object
      properties:
        aliases:
          type: array
          items:
            $ref: '#/components/schemas/RichMenuAliasResponse'
          description: Rich menu aliases.
    RichMenuBulkLinkRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#link-rich-menu-to-users
      required:
      - richMenuId
      - userIds
      type: object
      properties:
        richMenuId:
          type: string
          description: ID of a rich menu
        userIds:
          maxItems: 500
          minItems: 1
          type: array
          items:
            type: string
          description: Array of user IDs. Found in the `source` object of webhook
            event objects. Do not use the LINE ID used in LINE.
    RichMenuBulkUnlinkRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#unlink-rich-menu-from-users
      required:
      - userIds
      type: object
      properties:
        userIds:
          maxItems: 500
          minItems: 1
          type: array
          items:
            type: string
          description: Array of user IDs. Found in the `source` object of webhook
            event objects. Do not use the LINE ID used in LINE.
    RichMenuBatchRequest:
      type: object
      required:
      - operations
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/RichMenuBatchOperation'
          description: Array of Rich menu operation object...
          maxItems: 1000
        resumeRequestKey:
          type: string
          description: Key for retry. Key value is a string matching the regular expression
            pattern
          maxLength: 100
          minLength: 1
          pattern: ^[a-zA-Z0-9_-]{1,100}$
    RichMenuBatchOperation:
      description: Rich menu operation object represents the batch operation to the
        rich menu linked to the user.
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#batch-control-rich-menus-of-users-operations
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: The type of operation to the rich menu linked to the user.
            One of link, unlink, or unlinkAll.
      discriminator:
        propertyName: type
        mapping:
          link: '#/components/schemas/RichMenuBatchLinkOperation'
          unlink: '#/components/schemas/RichMenuBatchUnlinkOperation'
          unlinkAll: '#/components/schemas/RichMenuBatchUnlinkAllOperation'
    RichMenuBatchLinkOperation:
      description: Replace the rich menu with the rich menu specified in the `to`
        property for all users linked to the rich menu specified in the `from` property.
      type: object
      required:
      - from
      - to
      allOf:
      - $ref: '#/components/schemas/RichMenuBatchOperation'
      - type: object
        properties:
          from:
            type: string
          to:
            type: string
    RichMenuBatchUnlinkOperation:
      description: Unlink the rich menu for all users linked to the rich menu specified
        in the `from` property.
      type: object
      required:
      - from
      allOf:
      - $ref: '#/components/schemas/RichMenuBatchOperation'
      - type: object
        properties:
          from:
            type: string
    RichMenuBatchUnlinkAllOperation:
      description: Unlink the rich menu from all users linked to the rich menu.
      type: object
      allOf:
      - $ref: '#/components/schemas/RichMenuBatchOperation'
    RichMenuBatchProgressResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-batch-control-rich-menus-progress-status-response
      required:
      - phase
      - acceptedTime
      type: object
      properties:
        phase:
          $ref: '#/components/schemas/RichMenuBatchProgressPhase'
        acceptedTime:
          type: string
          format: date-time
          description: 'The accepted time in milliseconds of the request of batch
            control the rich menu.


            Format: ISO 8601 (e.g. 2023-06-08T10:15:30.121Z)

            Timezone: UTC

            '
        completedTime:
          type: string
          format: date-time
          description: 'The completed time in milliseconds of rich menu batch control.
            Returned when the phase property is succeeded or failed.


            Format: ISO 8601 (e.g. 2023-06-08T10:15:30.121Z)

            Timezone: UTC

            '
    RichMenuBatchProgressPhase:
      type: string
      description: "The current status. One of:\n\n`ongoing`: Rich menu batch control\
        \ is in progress.\n`succeeded`: Rich menu batch control is complete.\n`failed`:\
        \ Rich menu batch control failed.\n          This means that the rich menu\
        \ for one or more users couldn't be controlled.\n          There may also\
        \ be users whose operations have been successfully completed.\n"
      enum:
      - ongoing
      - succeeded
      - failed
    IssueLinkTokenResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#issue-link-token
      required:
      - linkToken
      type: object
      properties:
        linkToken:
          type: string
          description: 'Link token.

            Link tokens are valid for 10 minutes and can only be used once.


            '
    MarkMessagesAsReadRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#mark-messages-from-users-as-read
      required:
      - chat
      type: object
      properties:
        chat:
          $ref: '#/components/schemas/ChatReference'
    ChatReference:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#mark-messages-from-users-as-read
      required:
      - userId
      type: object
      description: Chat reference
      properties:
        userId:
          type: string
          description: The target user ID
    PnpMessagesRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#send-line-notification-message
      required:
      - messages
      - to
      type: object
      properties:
        messages:
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: Message to be sent.
        to:
          type: string
          description: Message destination. Specify a phone number that has been normalized
            to E.164 format and hashed with SHA256.
        notificationDisabled:
          $ref: '#/components/schemas/NotificationDisabled'
    AudienceMatchMessagesRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#phone-audience-match
      required:
      - messages
      - to
      type: object
      properties:
        messages:
          description: Destination of the message (A value obtained by hashing the
            telephone number, which is another value normalized to E.164 format, with
            SHA256).
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Message'
        to:
          description: Message to send.
          maxItems: 500
          minItems: 1
          type: array
          items:
            type: string
        notificationDisabled:
          $ref: '#/components/schemas/NotificationDisabled'
    Message:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#message-common-properties
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: Type of message
        quickReply:
          $ref: '#/components/schemas/QuickReply'
        sender:
          $ref: '#/components/schemas/Sender'
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextMessage'
          textV2: '#/components/schemas/TextMessageV2'
          sticker: '#/components/schemas/StickerMessage'
          image: '#/components/schemas/ImageMessage'
          video: '#/components/schemas/VideoMessage'
          audio: '#/components/schemas/AudioMessage'
          location: '#/components/schemas/LocationMessage'
          imagemap: '#/components/schemas/ImagemapMessage'
          template: '#/components/schemas/TemplateMessage'
          flex: '#/components/schemas/FlexMessage'
    QuickReply:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#items-object
      type: object
      description: Quick reply
      properties:
        items:
          type: array
          maxItems: 13
          items:
            $ref: '#/components/schemas/QuickReplyItem'
          description: Quick reply button objects.
    QuickReplyItem:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#items-object
      type: object
      properties:
        imageUrl:
          type: string
          format: uri
          description: URL of the icon that is displayed at the beginning of the button
          maxLength: 2000
        action:
          $ref: '#/components/schemas/Action'
        type:
          type: string
          description: '`action`'
          default: action
    Sender:
      type: object
      description: Change icon and display name
      properties:
        name:
          type: string
          description: Display name. Certain words such as `LINE` may not be used.
          maxLength: 20
        iconUrl:
          type: string
          format: uri
          description: URL of the image to display as an icon when sending a message
          maxLength: 2000
    TextMessage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#text-message
      type: object
      required:
      - text
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          text:
            type: string
          emojis:
            type: array
            items:
              $ref: '#/components/schemas/Emoji'
          quoteToken:
            type: string
            description: Quote token of the message you want to quote.
    Emoji:
      type: object
      properties:
        index:
          type: integer
          format: int32
        productId:
          type: string
        emojiId:
          type: string
    TextMessageV2:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#text-message-v2
      type: object
      required:
      - text
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          text:
            type: string
          substitution:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/SubstitutionObject'
            description: A mapping that specifies substitutions for parts enclosed
              in {} within the `text` field.
          quoteToken:
            type: string
            description: Quote token of the message you want to quote.
    SubstitutionObject:
      description: An object that defines the replacement value for a placeholder
        in the text.
      type: object
      properties:
        type:
          description: Type of substitution object
          type: string
      discriminator:
        propertyName: type
        mapping:
          mention: '#/components/schemas/MentionSubstitutionObject'
          emoji: '#/components/schemas/EmojiSubstitutionObject'
      required:
      - type
    MentionSubstitutionObject:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#text-message-v2-mention-object
      description: An object representing a mention substitution.
      allOf:
      - $ref: '#/components/schemas/SubstitutionObject'
      - type: object
        properties:
          mentionee:
            $ref: '#/components/schemas/MentionTarget'
        required:
        - mentionee
    MentionTarget:
      type: object
      properties:
        type:
          description: Target to be mentioned
          type: string
      discriminator:
        propertyName: type
        mapping:
          user: '#/components/schemas/UserMentionTarget'
          all: '#/components/schemas/AllMentionTarget'
      required:
      - type
    UserMentionTarget:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#text-message-v2-mentionee-user
      allOf:
      - $ref: '#/components/schemas/MentionTarget'
      - type: object
        properties:
          userId:
            type: string
        required:
        - userId
    AllMentionTarget:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#text-message-v2-mentionee-all
      allOf:
      - $ref: '#/components/schemas/MentionTarget'
    EmojiSubstitutionObject:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#text-message-v2-emoji-object
      description: An object representing a emoji substitution.
      allOf:
      - $ref: '#/components/schemas/SubstitutionObject'
      - type: object
        properties:
          productId:
            type: string
          emojiId:
            type: string
        required:
        - productId
        - emojiId
    StickerMessage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#sticker-message
      type: object
      required:
      - packageId
      - stickerId
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          packageId:
            type: string
          stickerId:
            type: string
          quoteToken:
            type: string
            description: Quote token of the message you want to quote.
    ImageMessage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#image-message
      required:
      - originalContentUrl
      - previewImageUrl
      type: object
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          originalContentUrl:
            type: string
            format: uri
          previewImageUrl:
            type: string
            format: uri
    VideoMessage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#video-message
      type: object
      required:
      - originalContentUrl
      - previewImageUrl
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          originalContentUrl:
            type: string
            format: uri
          previewImageUrl:
            type: string
            format: uri
          trackingId:
            type: string
    AudioMessage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#audio-message
      type: object
      required:
      - originalContentUrl
      - duration
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          originalContentUrl:
            type: string
            format: uri
          duration:
            type: integer
            format: int64
    LocationMessage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#location-message
      required:
      - title
      - address
      - latitude
      - longitude
      type: object
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          title:
            type: string
          address:
            type: string
          latitude:
            type: number
            format: double
          longitude:
            type: number
            format: double
    ImagemapMessage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#imagemap-message
      type: object
      required:
      - baseUrl
      - altText
      - baseSize
      - actions
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          baseUrl:
            type: string
            format: uri
          altText:
            type: string
          baseSize:
            $ref: '#/components/schemas/ImagemapBaseSize'
          actions:
            type: array
            items:
              $ref: '#/components/schemas/ImagemapAction'
          video:
            $ref: '#/components/schemas/ImagemapVideo'
    ImagemapBaseSize:
      type: object
      required:
      - width
      - height
      properties:
        height:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
    ImagemapAction:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#imagemap-action-objects
      required:
      - type
      - area
      type: object
      properties:
        type:
          type: string
        area:
          $ref: '#/components/schemas/ImagemapArea'
      discriminator:
        propertyName: type
        mapping:
          message: '#/components/schemas/MessageImagemapAction'
          uri: '#/components/schemas/URIImagemapAction'
          clipboard: '#/components/schemas/ClipboardImagemapAction'
    MessageImagemapAction:
      type: object
      required:
      - text
      allOf:
      - $ref: '#/components/schemas/ImagemapAction'
      - type: object
        properties:
          text:
            type: string
          label:
            type: string
    URIImagemapAction:
      type: object
      required:
      - linkUri
      allOf:
      - $ref: '#/components/schemas/ImagemapAction'
      - type: object
        properties:
          linkUri:
            type: string
          label:
            type: string
    ClipboardImagemapAction:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#imagemap-clipboard-action-object
      type: object
      required:
      - clipboardText
      allOf:
      - $ref: '#/components/schemas/ImagemapAction'
      - type: object
        properties:
          clipboardText:
            description: 'Text that is copied to the clipboard.

              Max character limit: 1000

              '
            maxLength: 1000
            minLength: 1
            type: string
          label:
            type: string
    ImagemapArea:
      type: object
      required:
      - x
      - y
      - width
      - height
      properties:
        x:
          type: integer
          format: int32
        y:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
    ImagemapVideo:
      type: object
      properties:
        originalContentUrl:
          type: string
          format: uri
        previewImageUrl:
          type: string
          format: uri
        area:
          $ref: '#/components/schemas/ImagemapArea'
        externalLink:
          $ref: '#/components/schemas/ImagemapExternalLink'
    ImagemapExternalLink:
      type: object
      properties:
        linkUri:
          type: string
          format: uri
        label:
          type: string
    TemplateMessage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#template-messages
      type: object
      required:
      - altText
      - template
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          altText:
            type: string
          template:
            $ref: '#/components/schemas/Template'
    Template:
      required:
      - type
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          buttons: '#/components/schemas/ButtonsTemplate'
          confirm: '#/components/schemas/ConfirmTemplate'
          carousel: '#/components/schemas/CarouselTemplate'
          image_carousel: '#/components/schemas/ImageCarouselTemplate'
    ButtonsTemplate:
      type: object
      required:
      - text
      - actions
      allOf:
      - $ref: '#/components/schemas/Template'
      - type: object
        properties:
          thumbnailImageUrl:
            type: string
            format: uri
          imageAspectRatio:
            type: string
          imageSize:
            type: string
          imageBackgroundColor:
            type: string
          title:
            type: string
          text:
            type: string
          defaultAction:
            $ref: '#/components/schemas/Action'
          actions:
            type: array
            items:
              $ref: '#/components/schemas/Action'
    TemplateImageAspectRatio:
      type: string
      description: 'Aspect ratio of the image. This is only for the `imageAspectRatio`
        in ButtonsTemplate.

        Specify one of the following values:


        `rectangle`: 1.51:1

        `square`: 1:1

        '
      enum:
      - rectangle
      - square
    TemplateImageSize:
      type: string
      description: 'Size of the image.  This is only for the `imageSize` in ButtonsTemplate.

        Specify one of the following values:


        `cover`: The image fills the entire image area. Parts of the image that do
        not fit in the area are not displayed.

        `contain`: The entire image is displayed in the image area. A background is
        displayed in the unused areas to the left and right of vertical images and
        in the areas above and below horizontal images.

        '
      enum:
      - cover
      - contain
    ConfirmTemplate:
      type: object
      required:
      - text
      - actions
      allOf:
      - $ref: '#/components/schemas/Template'
      - type: object
        properties:
          text:
            type: string
          actions:
            type: array
            items:
              $ref: '#/components/schemas/Action'
    CarouselTemplate:
      type: object
      required:
      - columns
      allOf:
      - $ref: '#/components/schemas/Template'
      - type: object
        properties:
          columns:
            type: array
            items:
              $ref: '#/components/schemas/CarouselColumn'
          imageAspectRatio:
            type: string
          imageSize:
            type: string
    CarouselColumn:
      description: Column object for carousel template.
      type: object
      required:
      - text
      - actions
      properties:
        thumbnailImageUrl:
          type: string
          format: uri
        imageBackgroundColor:
          type: string
        title:
          type: string
        text:
          type: string
        defaultAction:
          $ref: '#/components/schemas/Action'
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
    ImageCarouselTemplate:
      type: object
      required:
      - columns
      allOf:
      - $ref: '#/components/schemas/Template'
      - type: object
        properties:
          columns:
            type: array
            items:
              $ref: '#/components/schemas/ImageCarouselColumn'
    ImageCarouselColumn:
      type: object
      required:
      - imageUrl
      - action
      properties:
        imageUrl:
          type: string
          format: uri
        action:
          $ref: '#/components/schemas/Action'
    FlexMessage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#flex-message
      type: object
      required:
      - altText
      - contents
      allOf:
      - $ref: '#/components/schemas/Message'
      - type: object
        properties:
          altText:
            type: string
          contents:
            $ref: '#/components/schemas/FlexContainer'
    FlexContainer:
      required:
      - type
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          bubble: '#/components/schemas/FlexBubble'
          carousel: '#/components/schemas/FlexCarousel'
    FlexBubble:
      type: object
      allOf:
      - $ref: '#/components/schemas/FlexContainer'
      - type: object
        properties:
          direction:
            type: string
            enum:
            - ltr
            - rtl
          styles:
            $ref: '#/components/schemas/FlexBubbleStyles'
          header:
            $ref: '#/components/schemas/FlexBox'
          hero:
            $ref: '#/components/schemas/FlexComponent'
          body:
            $ref: '#/components/schemas/FlexBox'
          footer:
            $ref: '#/components/schemas/FlexBox'
          size:
            type: string
            enum:
            - nano
            - micro
            - deca
            - hecto
            - kilo
            - mega
            - giga
          action:
            $ref: '#/components/schemas/Action'
    FlexCarousel:
      type: object
      required:
      - contents
      allOf:
      - $ref: '#/components/schemas/FlexContainer'
      - type: object
        properties:
          contents:
            type: array
            items:
              $ref: '#/components/schemas/FlexBubble'
    FlexBubbleStyles:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/FlexBlockStyle'
        hero:
          $ref: '#/components/schemas/FlexBlockStyle'
        body:
          $ref: '#/components/schemas/FlexBlockStyle'
        footer:
          $ref: '#/components/schemas/FlexBlockStyle'
    FlexBlockStyle:
      type: object
      properties:
        backgroundColor:
          type: string
        separator:
          type: boolean
        separatorColor:
          type: string
    FlexComponent:
      required:
      - type
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          box: '#/components/schemas/FlexBox'
          button: '#/components/schemas/FlexButton'
          image: '#/components/schemas/FlexImage'
          video: '#/components/schemas/FlexVideo'
          icon: '#/components/schemas/FlexIcon'
          text: '#/components/schemas/FlexText'
          span: '#/components/schemas/FlexSpan'
          separator: '#/components/schemas/FlexSeparator'
          filler: '#/components/schemas/FlexFiller'
    FlexBox:
      type: object
      required:
      - layout
      - contents
      allOf:
      - $ref: '#/components/schemas/FlexComponent'
      - properties:
          layout:
            type: string
            enum:
            - horizontal
            - vertical
            - baseline
          flex:
            type: integer
            format: int32
          contents:
            type: array
            items:
              $ref: '#/components/schemas/FlexComponent'
          spacing:
            type: string
          margin:
            type: string
          position:
            type: string
            enum:
            - relative
            - absolute
          offsetTop:
            type: string
          offsetBottom:
            type: string
          offsetStart:
            type: string
          offsetEnd:
            type: string
          backgroundColor:
            type: string
          borderColor:
            type: string
          borderWidth:
            type: string
          cornerRadius:
            type: string
          width:
            type: string
          maxWidth:
            type: string
          height:
            type: string
          maxHeight:
            type: string
          paddingAll:
            type: string
          paddingTop:
            type: string
          paddingBottom:
            type: string
          paddingStart:
            type: string
          paddingEnd:
            type: string
          action:
            $ref: '#/components/schemas/Action'
          justifyContent:
            type: string
            enum:
            - center
            - flex-start
            - flex-end
            - space-between
            - space-around
            - space-evenly
          alignItems:
            type: string
            enum:
            - center
            - flex-start
            - flex-end
          background:
            $ref: '#/components/schemas/FlexBoxBackground'
    FlexBoxBorderWidth:
      type: string
      description: 'Width of box border. This is only for `borderWidth` in FlexBox.

        A value of none means that borders are not rendered; the other values are
        listed in order of increasing width.

        '
      enum:
      - none
      - light
      - normal
      - medium
      - semi-bold
      - bold
    FlexBoxCornerRadius:
      type: string
      description: 'Radius at the time of rounding the corners of the box. This is
        only for `cornerRadius` in FlexBox.

        A value of none means that corners are not rounded; the other values are listed
        in order of increasing radius.

        '
      enum:
      - none
      - xs
      - sm
      - md
      - lg
      - xl
      - xxl
    FlexBoxSpacing:
      type: string
      description: 'You can specify the minimum space between two components with
        the `spacing` property of the parent box component, in pixels or with a keyword.

        FlexBoxSpacing just provides only keywords.

        '
      enum:
      - none
      - xs
      - sm
      - md
      - lg
      - xl
      - xxl
    FlexMargin:
      type: string
      description: 'You can specify the minimum space before a child component with
        the `margin` property of the child component, in pixels or with a keyword.

        FlexMargin just provides only keywords.

        '
      enum:
      - none
      - xs
      - sm
      - md
      - lg
      - xl
      - xxl
    FlexBoxPadding:
      type: string
      description: 'Padding can be specified in pixels, percentage (to the parent
        box width) or with a keyword.

        FlexBoxPadding just provides only keywords.

        '
      enum:
      - none
      - xs
      - sm
      - md
      - lg
      - xl
      - xxl
    FlexImageSize:
      type: string
      description: 'You can set the width of an Flex image component with the `size`
        property, in pixels, as a percentage, or with a keyword.

        FlexImageSize just provides only keywords.

        '
      enum:
      - xxs
      - xs
      - sm
      - md
      - lg
      - xl
      - xxl
      - 3xl
      - 4xl
      - 5xl
      - full
    FlexIconSize:
      type: string
      description: 'You can set the width of an Flex icon component with the `size`
        property, in pixels, as a percentage, or with a keyword.

        FlexIconSize just provides only keywords.

        '
      enum:
      - xxs
      - xs
      - sm
      - md
      - lg
      - xl
      - xxl
      - 3xl
      - 4xl
      - 5xl
    FlexTextFontSize:
      type: string
      description: 'Font size in the `size` property of the Flex text component.

        You can specify the size in pixels or with a keyword.

        FlexTextFontSize just provides only keywords.

        '
      enum:
      - xxs
      - xs
      - sm
      - md
      - lg
      - xl
      - xxl
      - 3xl
      - 4xl
      - 5xl
    FlexSpanSize:
      type: string
      description: 'Font size in the `size` property of the Flex span component.

        You can specify the size in pixels or with a keyword.

        FlexSpanSize just provides only keywords.

        '
      enum:
      - xxs
      - xs
      - sm
      - md
      - lg
      - xl
      - xxl
      - 3xl
      - 4xl
      - 5xl
    FlexOffset:
      type: string
      description: 'You can specify the offset of a component with the `offset*` property,
        in pixels or with a keyword.

        You can also specify the percentage to the box width for `offsetStart` and
        `offsetEnd` and to the box height for `offsetTop` and `offsetBottom`.

        FlexOffset just provides only keywords.

        '
      enum:
      - none
      - xs
      - sm
      - md
      - lg
      - xl
      - xxl
    FlexButton:
      type: object
      required:
      - action
      allOf:
      - $ref: '#/components/schemas/FlexComponent'
      - type: object
        properties:
          flex:
            type: integer
            format: int32
          color:
            type: string
          style:
            type: string
            enum:
            - primary
            - secondary
            - link
          action:
            $ref: '#/components/schemas/Action'
          gravity:
            type: string
            enum:
            - top
            - bottom
            - center
          margin:
            type: string
          position:
            type: string
            enum:
            - relative
            - absolute
          offsetTop:
            type: string
          offsetBottom:
            type: string
          offsetStart:
            type: string
          offsetEnd:
            type: string
          height:
            type: string
            enum:
            - md
            - sm
          adjustMode:
            type: string
            enum:
            - shrink-to-fit
          scaling:
            type: boolean
    FlexImage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#f-image
      type: object
      required:
      - type
      - url
      allOf:
      - $ref: '#/components/schemas/FlexComponent'
      - type: object
        properties:
          url:
            type: string
            format: uri
            description: "Image URL (Max character limit: 2000)\nProtocol: HTTPS (TLS\
              \ 1.2 or later)\nImage format: JPEG or PNG\nMaximum image size: 1024\xD7\
              1024 pixels\nMaximum file size: 10 MB (300 KB when the animated property\
              \ is true)\n"
          flex:
            type: integer
            format: int32
            description: The ratio of the width or height of this component within
              the parent box.
          margin:
            type: string
            description: 'The minimum amount of space to include before this component
              in its parent container.

              '
          position:
            type: string
            enum:
            - relative
            - absolute
            description: 'Reference for offsetTop, offsetBottom, offsetStart, and
              offsetEnd. Specify one of the following values:


              `relative`: Use the previous box as reference.

              `absolute`: Use the top left of parent element as reference. The default
              value is relative.

              '
          offsetTop:
            type: string
            description: Offset.
          offsetBottom:
            type: string
            description: Offset.
          offsetStart:
            type: string
            description: Offset.
          offsetEnd:
            type: string
            description: Offset.
          align:
            type: string
            enum:
            - start
            - end
            - center
            description: 'Alignment style in horizontal direction.

              '
          gravity:
            type: string
            enum:
            - top
            - bottom
            - center
            description: Alignment style in vertical direction.
          size:
            type: string
            default: md
            description: 'The maximum image width. This is md by default.

              '
          aspectRatio:
            type: string
            description: 'Aspect ratio of the image.

              `{width}:{height}` format.

              Specify the value of `{width}` and `{height}` in the range from `1`
              to `100000`.

              However, you cannot set `{height}` to a value that is more than three
              times the value of `{width}`.

              The default value is `1:1`.

              '
          aspectMode:
            type: string
            enum:
            - fit
            - cover
            description: 'The display style of the image if the aspect ratio of the
              image and that specified by the aspectRatio property do not match.

              '
          backgroundColor:
            type: string
            description: Background color of the image. Use a hexadecimal color code.
          action:
            $ref: '#/components/schemas/Action'
          animated:
            type: boolean
            default: false
            description: 'When this is `true`, an animated image (APNG) plays.

              You can specify a value of true up to 10 images in a single message.

              You can''t send messages that exceed this limit.

              This is `false` by default.

              Animated images larger than 300 KB aren''t played back.

              '
    FlexVideo:
      type: object
      required:
      - url
      - previewUrl
      - altContent
      allOf:
      - $ref: '#/components/schemas/FlexComponent'
      - type: object
        properties:
          url:
            type: string
            format: uri
          previewUrl:
            type: string
            format: uri
          altContent:
            $ref: '#/components/schemas/FlexComponent'
          aspectRatio:
            type: string
          action:
            $ref: '#/components/schemas/Action'
    FlexIcon:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#icon
      type: object
      required:
      - url
      allOf:
      - $ref: '#/components/schemas/FlexComponent'
      - type: object
        properties:
          url:
            type: string
            format: uri
          size:
            type: string
          aspectRatio:
            type: string
          margin:
            type: string
          position:
            type: string
            enum:
            - relative
            - absolute
          offsetTop:
            type: string
          offsetBottom:
            type: string
          offsetStart:
            type: string
          offsetEnd:
            type: string
          scaling:
            type: boolean
    FlexText:
      type: object
      allOf:
      - $ref: '#/components/schemas/FlexComponent'
      - type: object
        properties:
          flex:
            type: integer
            format: int32
          text:
            type: string
          size:
            type: string
          align:
            type: string
            enum:
            - start
            - end
            - center
          gravity:
            type: string
            enum:
            - top
            - bottom
            - center
          color:
            type: string
          weight:
            type: string
            enum:
            - regular
            - bold
          style:
            type: string
            enum:
            - normal
            - italic
          decoration:
            type: string
            enum:
            - none
            - underline
            - line-through
          wrap:
            type: boolean
          lineSpacing:
            type: string
          margin:
            type: string
          position:
            type: string
            enum:
            - relative
            - absolute
          offsetTop:
            type: string
          offsetBottom:
            type: string
          offsetStart:
            type: string
          offsetEnd:
            type: string
          action:
            $ref: '#/components/schemas/Action'
          maxLines:
            type: integer
            format: int32
          contents:
            type: array
            items:
              $ref: '#/components/schemas/FlexSpan'
          adjustMode:
            type: string
            enum:
            - shrink-to-fit
          scaling:
            type: boolean
    FlexSpan:
      type: object
      allOf:
      - $ref: '#/components/schemas/FlexComponent'
      - type: object
        properties:
          text:
            type: string
          size:
            type: string
          color:
            type: string
          weight:
            type: string
            enum:
            - regular
            - bold
          style:
            type: string
            enum:
            - normal
            - italic
          decoration:
            type: string
            enum:
            - none
            - underline
            - line-through
    FlexSeparator:
      type: object
      allOf:
      - $ref: '#/components/schemas/FlexComponent'
      - type: object
        properties:
          margin:
            type: string
          color:
            type: string
    FlexFiller:
      type: object
      allOf:
      - $ref: '#/components/schemas/FlexComponent'
      - type: object
        properties:
          flex:
            type: integer
            format: int32
    FlexBoxBackground:
      required:
      - type
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          linearGradient: '#/components/schemas/FlexBoxLinearGradient'
    FlexBoxLinearGradient:
      type: object
      allOf:
      - $ref: '#/components/schemas/FlexBoxBackground'
      - type: object
        properties:
          angle:
            type: string
          startColor:
            type: string
          endColor:
            type: string
          centerColor:
            type: string
          centerPosition:
            type: string
    Action:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#action-objects
      description: Action
      type: object
      properties:
        type:
          type: string
          description: Type of action
        label:
          type: string
          description: Label for the action.
      discriminator:
        propertyName: type
        mapping:
          camera: '#/components/schemas/CameraAction'
          cameraRoll: '#/components/schemas/CameraRollAction'
          clipboard: '#/components/schemas/ClipboardAction'
          datetimepicker: '#/components/schemas/DatetimePickerAction'
          location: '#/components/schemas/LocationAction'
          message: '#/components/schemas/MessageAction'
          postback: '#/components/schemas/PostbackAction'
          richmenuswitch: '#/components/schemas/RichMenuSwitchAction'
          uri: '#/components/schemas/URIAction'
    CameraAction:
      type: object
      allOf:
      - $ref: '#/components/schemas/Action'
    CameraRollAction:
      type: object
      allOf:
      - $ref: '#/components/schemas/Action'
    ClipboardAction:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#clipboard-action
      type: object
      allOf:
      - $ref: '#/components/schemas/Action'
      - type: object
        required:
        - clipboardText
        properties:
          clipboardText:
            description: 'Text that is copied to the clipboard.

              Max character limit: 1000

              '
            maxLength: 1000
            minLength: 1
            type: string
    DatetimePickerAction:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#datetime-picker-action
      type: object
      allOf:
      - $ref: '#/components/schemas/Action'
      - type: object
        properties:
          data:
            maxLength: 300
            minLength: 0
            type: string
          mode:
            type: string
            enum:
            - date
            - time
            - datetime
          initial:
            type: string
          max:
            type: string
          min:
            type: string
    LocationAction:
      type: object
      allOf:
      - $ref: '#/components/schemas/Action'
    MessageAction:
      type: object
      allOf:
      - $ref: '#/components/schemas/Action'
      - type: object
        properties:
          text:
            type: string
    PostbackAction:
      type: object
      allOf:
      - $ref: '#/components/schemas/Action'
      - type: object
        properties:
          data:
            maxLength: 300
            minLength: 0
            type: string
          displayText:
            type: string
          text:
            type: string
          inputOption:
            type: string
            enum:
            - closeRichMenu
            - openRichMenu
            - openKeyboard
            - openVoice
          fillInText:
            type: string
    RichMenuSwitchAction:
      type: object
      allOf:
      - $ref: '#/components/schemas/Action'
      - type: object
        properties:
          data:
            maxLength: 300
            minLength: 0
            type: string
          richMenuAliasId:
            maxLength: 32
            minLength: 0
            type: string
    URIAction:
      type: object
      allOf:
      - $ref: '#/components/schemas/Action'
      - type: object
        properties:
          uri:
            type: string
            format: uri
          altUri:
            $ref: '#/components/schemas/AltUri'
    AltUri:
      type: object
      properties:
        desktop:
          maxLength: 1000
          minLength: 0
          type: string
    GetMembershipSubscriptionResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-a-users-membership-subscription-status
      description: A user's membership subscription status
      required:
      - subscriptions
      type: object
      properties:
        subscriptions:
          type: array
          minItems: 0
          description: List of subscription information
          items:
            $ref: '#/components/schemas/Subscription'
    MembershipListResponse:
      description: List of memberships
      required:
      - memberships
      type: object
      properties:
        memberships:
          type: array
          minItems: 0
          description: List of membership information
          items:
            $ref: '#/components/schemas/Membership'
    Subscription:
      description: An array of memberships.
      required:
      - membership
      - user
      type: object
      properties:
        membership:
          $ref: '#/components/schemas/SubscribedMembershipPlan'
        user:
          $ref: '#/components/schemas/SubscribedMembershipUser'
    SubscribedMembershipPlan:
      description: Object containing information about the membership plan.
      type: object
      required:
      - membershipId
      - title
      - description
      - benefits
      - price
      - currency
      properties:
        membershipId:
          type: integer
          description: Membership plan ID.
        title:
          type: string
          description: Membership plan name.
        description:
          type: string
          description: Membership plan description.
        benefits:
          type: array
          minItems: 1
          items:
            type: string
          description: List of membership plan perks.
        price:
          type: number
          format: double
          example: 500.0
          description: Monthly fee for membership plan. (e.g. 1500.00)
        currency:
          type: string
          description: The currency of membership.price.
          enum:
          - JPY
          - TWD
          - THB
    SubscribedMembershipUser:
      description: Object containing user membership subscription information.
      type: object
      required:
      - membershipNo
      - joinedTime
      - nextBillingDate
      - totalSubscriptionMonths
      properties:
        membershipNo:
          type: integer
          description: The user's member number in the membership plan.
        joinedTime:
          type: integer
          description: UNIX timestamp at which the user subscribed to the membership.
        nextBillingDate:
          type: string
          description: 'Next payment date for membership plan.

            - Format: yyyy-MM-dd (e.g. 2024-02-08)

            - Timezone: UTC+9

            '
        totalSubscriptionMonths:
          type: integer
          description: The period of time in months that the user has been subscribed
            to a membership plan. If a user previously canceled and then re-subscribed
            to the same membership plan, only the period after the re-subscription
            will be counted.
    Membership:
      required:
      - membershipId
      - title
      - description
      - benefits
      - price
      - currency
      - memberCount
      - memberLimit
      - isInAppPurchase
      - isPublished
      type: object
      properties:
        membershipId:
          type: integer
          description: Membership plan ID.
        title:
          type: string
          description: Membership plan name.
        description:
          type: string
          description: Membership plan description.
        benefits:
          type: array
          minItems: 1
          items:
            type: string
          description: List of membership plan perks.
        price:
          type: number
          format: double
          example: 500.0
          description: Monthly fee for membership plan. (e.g. 1500.00)
        currency:
          type: string
          description: The currency of membership.price.
          enum:
          - JPY
          - TWD
          - THB
        memberCount:
          type: integer
          example: 100
          description: Number of members subscribed to the membership plan.
        memberLimit:
          type: integer
          nullable: true
          example: 1000
          description: The upper limit of members who can subscribe. If no upper limit
            is set, it will be null.
        isInAppPurchase:
          type: boolean
          description: Payment method for users who subscribe to a membership plan.
        isPublished:
          type: boolean
          description: Membership plan status.
    ShowLoadingAnimationRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#display-a-loading-indicator-request-body
      required:
      - chatId
      type: object
      properties:
        chatId:
          type: string
          description: User ID of the target user for whom the loading animation is
            to be displayed.
        loadingSeconds:
          type: integer
          format: int32
          maximum: 60
          minimum: 5
          description: 'The number of seconds to display the loading indicator.

            It must be a multiple of 5. The maximum value is 60 seconds.

            '
    ShowLoadingAnimationResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#display-a-loading-indicator-response
      type: object
    ErrorResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#error-responses
      type: object
      required:
      - message
      properties:
        message:
          type: string
          description: Message containing information about the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
          description: An array of error details. If the array is empty, this property
            will not be included in the response.
        sentMessages:
          description: Array of sent messages.
          maxItems: 5
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/SentMessage'
    ErrorDetail:
      type: object
      properties:
        message:
          type: string
          description: Details of the error. Not included in the response under certain
            situations.
        property:
          type: string
          description: Location of where the error occurred. Returns the JSON field
            name or query parameter name of the request. Not included in the response
            under certain situations.
    CreateAudienceGroupRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-upload-audience-group
      type: object
      description: Create audience for uploading user IDs (by JSON)
      properties:
        description:
          type: string
          description: 'The audience''s name. This is case-insensitive, meaning AUDIENCE
            and audience are considered identical.

            Max character limit: 120

            '
          maxLength: 120
        isIfaAudience:
          type: boolean
          description: 'To specify recipients by IFAs: set true.

            To specify recipients by user IDs: set false or omit isIfaAudience property.

            '
        uploadDescription:
          type: string
          description: 'The description to register for the job (in jobs[].description).

            '
        audiences:
          type: array
          items:
            $ref: '#/components/schemas/Audience'
          description: 'An array of user IDs or IFAs.

            Max number: 10,000

            '
          maxItems: 10000
    Audience:
      description: Audience
      type: object
      properties:
        id:
          type: string
          description: A user ID or IFA. You can specify an empty array.
    CreateAudienceGroupResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-upload-audience-group
      type: object
      description: Create audience for uploading user IDs (by JSON)
      properties:
        audienceGroupId:
          type: integer
          format: int64
          description: The audience ID.
        createRoute:
          type: string
          enum:
          - MESSAGING_API
          description: 'How the audience was created.


            `MESSAGING_API`: An audience created with Messaging API.

            '
        type:
          $ref: '#/components/schemas/AudienceGroupType'
        description:
          type: string
          description: The audience's name.
        created:
          type: integer
          format: int64
          description: When the audience was created (in UNIX time).
        permission:
          type: string
          enum:
          - READ
          - READ_WRITE
          description: 'Audience''s update permission. Audiences linked to the same
            channel will be READ_WRITE.


            `READ`: Can use only.

            `READ_WRITE`: Can use and update.

            '
        expireTimestamp:
          type: number
          format: int64
          description: 'Time of audience expiration. Only returned for specific audiences.

            '
        isIfaAudience:
          type: boolean
          description: 'The value indicating the type of account to be sent, as specified
            when creating the audience for uploading user IDs. One of:


            `true`: Accounts are specified with IFAs.

            `false` (default): Accounts are specified with user IDs.

            '
    AudienceGroupType:
      description: Audience group type
      type: string
      enum:
      - UPLOAD
      - CLICK
      - IMP
      - CHAT_TAG
      - FRIEND_PATH
      - RESERVATION
      - APP_EVENT
      - VIDEO_VIEW
      - WEBTRAFFIC
      - IMAGE_CLICK
      - RICHMENU_IMP
      - RICHMENU_CLICK
    AddAudienceToAudienceGroupRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#update-upload-audience-group
      type: object
      description: Add user IDs or Identifiers for Advertisers (IFAs) to an audience
        for uploading user IDs (by JSON)
      properties:
        audienceGroupId:
          type: integer
          format: int64
          description: The audience ID.
        uploadDescription:
          type: string
          description: The audience's name.
        audiences:
          description: An array of up to 10,000 user IDs or IFAs.
          type: array
          items:
            $ref: '#/components/schemas/Audience'
          maxItems: 10000
    CreateClickBasedAudienceGroupRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-click-audience-group
      type: object
      description: Create audience for click-based retargeting
      properties:
        description:
          type: string
          description: 'The audience''s name. This is case-insensitive, meaning AUDIENCE
            and audience are considered identical.

            Max character limit: 120

            '
          maxLength: 120
        requestId:
          type: string
          description: 'The request ID of a broadcast or narrowcast message sent in
            the past 60 days.

            Each Messaging API request has a request ID.

            '
        clickUrl:
          type: string
          format: uri
          description: 'The URL clicked by the user. If empty, users who clicked any
            URL in the message are added to the list of recipients.

            Max character limit: 2,000

            '
          maxLength: 2000
    CreateClickBasedAudienceGroupResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-click-audience-group
      type: object
      description: Create audience for click-based retargeting
      properties:
        audienceGroupId:
          type: integer
          format: int64
          description: The audience ID.
        type:
          $ref: '#/components/schemas/AudienceGroupType'
        description:
          type: string
          description: The audience's name.
        created:
          type: integer
          format: int64
          description: When the audience was created (in UNIX time).
        requestId:
          type: string
          description: The request ID that was specified when the audience was created.
        clickUrl:
          type: string
          format: uri
          description: The URL that was specified when the audience was created.
        createRoute:
          type: string
          enum:
          - MESSAGING_API
          description: 'How the audience was created.

            `MESSAGING_API`: An audience created with Messaging API.

            '
        permission:
          type: string
          enum:
          - READ
          - READ_WRITE
          description: 'Audience''s update permission. Audiences linked to the same
            channel will be READ_WRITE.


            - `READ`: Can use only.

            - `READ_WRITE`: Can use and update.

            '
        expireTimestamp:
          type: integer
          format: int64
          description: Time of audience expiration. Only returned for specific audiences.
        isIfaAudience:
          type: boolean
          default: false
          description: 'The value indicating the type of account to be sent, as specified
            when creating the audience for uploading user IDs. One of:


            true: Accounts are specified with IFAs.

            false (default): Accounts are specified with user IDs.

            '
    CreateImpBasedAudienceGroupRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-imp-audience-group
      type: object
      description: Create audience for impression-based retargeting
      properties:
        description:
          type: string
          description: 'The audience''s name.

            This is case-insensitive, meaning `AUDIENCE` and `audience` are considered
            identical.

            Max character limit: 120

            '
          maxLength: 120
          minLength: 1
        requestId:
          type: string
          description: 'The request ID of a broadcast or narrowcast message sent in
            the past 60 days.

            Each Messaging API request has a request ID.

            '
    CreateImpBasedAudienceGroupResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#create-imp-audience-group
      type: object
      description: Create audience for impression-based retargeting
      properties:
        audienceGroupId:
          type: integer
          format: int64
          description: The audience ID.
        type:
          $ref: '#/components/schemas/AudienceGroupType'
        description:
          type: string
          description: The audience's name.
        created:
          type: integer
          format: int64
          description: When the audience was created (in UNIX time).
        requestId:
          type: string
          description: The request ID that was specified when the audience was created.
    UpdateAudienceGroupDescriptionRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#set-description-audience-group
      type: object
      description: Rename an audience
      properties:
        description:
          type: string
          description: 'The audience''s name. This is case-insensitive, meaning AUDIENCE
            and audience are considered identical.

            Max character limit: 120

            '
          maxLength: 120
          minLength: 1
    GetAudienceDataResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-audience-group
      type: object
      description: Get audience data
      properties:
        audienceGroup:
          $ref: '#/components/schemas/AudienceGroup'
        jobs:
          type: array
          description: 'An array of jobs.

            This array is used to keep track of each attempt to add new user IDs or
            IFAs to an audience for uploading user IDs.

            Empty array is returned for any other type of audience.

            Max: 50

            '
          maxItems: 50
          items:
            $ref: '#/components/schemas/AudienceGroupJob'
    AudienceGroup:
      type: object
      description: Audience group
      properties:
        audienceGroupId:
          type: integer
          format: int64
          description: The audience ID.
        type:
          $ref: '#/components/schemas/AudienceGroupType'
        description:
          type: string
          description: The audience's name.
        status:
          $ref: '#/components/schemas/AudienceGroupStatus'
        failedType:
          $ref: '#/components/schemas/AudienceGroupFailedType'
        audienceCount:
          type: integer
          format: int64
          description: The number of users included in the audience.
        created:
          type: integer
          format: int64
          description: When the audience was created (in UNIX time).
        requestId:
          type: string
          description: 'The request ID that was specified when the audience was created.

            This is only included when `audienceGroup.type` is CLICK or IMP.

            '
        clickUrl:
          type: string
          format: uri
          description: 'The URL that was specified when the audience was created.

            This is only included when `audienceGroup.type` is CLICK and link URL
            is specified.

            '
        isIfaAudience:
          type: boolean
          description: 'The value indicating the type of account to be sent, as specified
            when creating the audience for uploading user IDs.

            '
        permission:
          $ref: '#/components/schemas/AudienceGroupPermission'
        createRoute:
          $ref: '#/components/schemas/AudienceGroupCreateRoute'
    AudienceGroupJob:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-audience-group
      description: Audience group job
      type: object
      properties:
        audienceGroupJobId:
          type: integer
          format: int64
          description: A job ID.
        audienceGroupId:
          type: integer
          format: int64
          description: An audience ID.
        description:
          type: string
          description: The job's description.
        type:
          $ref: '#/components/schemas/AudienceGroupJobType'
        jobStatus:
          $ref: '#/components/schemas/AudienceGroupJobStatus'
        failedType:
          $ref: '#/components/schemas/AudienceGroupJobFailedType'
        audienceCount:
          type: integer
          format: int64
          description: The number of accounts (recipients) that were added or removed.
        created:
          type: integer
          format: int64
          description: When the job was created (in UNIX time).
    AudienceGroupStatus:
      description: Status
      type: string
      enum:
      - IN_PROGRESS
      - READY
      - FAILED
      - EXPIRED
      - INACTIVE
      - ACTIVATING
    AudienceGroupFailedType:
      description: Failed type
      type: string
      nullable: true
      enum:
      - AUDIENCE_GROUP_AUDIENCE_INSUFFICIENT
      - INTERNAL_ERROR
      - null
    AudienceGroupPermission:
      description: Permission
      type: string
      enum:
      - READ
      - READ_WRITE
    AudienceGroupCreateRoute:
      description: 'How the audience was created. One of:


        - `OA_MANAGER`: Audience created with [LINE Official Account Manager](https://manager.line.biz/).

        - `MESSAGING_API`: Audience created with Messaging API.

        - `POINT_AD`: Audience created with [LINE Points Ads](https://www.linebiz.com/jp/service/line-point-ad/)
        (Japanese only).

        - `AD_MANAGER`: Audience created with [LINE Ads](https://admanager.line.biz/).

        '
      type: string
      enum:
      - OA_MANAGER
      - MESSAGING_API
      - POINT_AD
      - AD_MANAGER
    AudienceGroupJobType:
      description: Job Type
      type: string
      enum:
      - DIFF_ADD
    AudienceGroupJobStatus:
      description: Job status
      type: string
      enum:
      - QUEUED
      - WORKING
      - FINISHED
      - FAILED
    AudienceGroupJobFailedType:
      description: Failed type
      type: string
      enum:
      - INTERNAL_ERROR
      - AUDIENCE_GROUP_AUDIENCE_INSUFFICIENT
    GetAudienceGroupsResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-audience-groups
      type: object
      description: Gets data for more than one audience.
      properties:
        audienceGroups:
          description: An array of audience data. If there are no audiences that match
            the specified filter, an empty array will be returned.
          type: array
          items:
            $ref: '#/components/schemas/AudienceGroup'
        hasNextPage:
          type: boolean
          description: true when this is not the last page.
        totalCount:
          type: integer
          format: int64
          description: The total number of audiences that can be returned with the
            specified filter.
        readWriteAudienceGroupTotalCount:
          type: integer
          format: int64
          description: Of the audiences you can get with the specified filter, the
            number of audiences with the update permission set to READ_WRITE.
        page:
          type: integer
          format: int64
          description: The current page number.
        size:
          type: integer
          format: int64
          description: The maximum number of audiences on the current page.
    GetAudienceGroupAuthorityLevelResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-authority-level
      type: object
      description: Get the authority level of the audience
      properties:
        authorityLevel:
          $ref: '#/components/schemas/AudienceGroupAuthorityLevel'
    AudienceGroupAuthorityLevel:
      description: authority level
      type: string
      enum:
      - PUBLIC
      - PRIVATE
    UpdateAudienceGroupAuthorityLevelRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#change-authority-level
      type: object
      description: Change the authority level of the audience
      properties:
        authorityLevel:
          $ref: '#/components/schemas/AudienceGroupAuthorityLevel'
    GetFriendsDemographicsResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-demographic
      description: Get friend demographics
      type: object
      properties:
        available:
          type: boolean
          description: true if friend demographic information is available.
        genders:
          type: array
          items:
            $ref: '#/components/schemas/GenderTile'
          description: Percentage per gender.
        ages:
          type: array
          items:
            $ref: '#/components/schemas/AgeTile'
          description: Percentage per age group.
        areas:
          type: array
          items:
            $ref: '#/components/schemas/AreaTile'
          description: Percentage per area.
        appTypes:
          type: array
          items:
            $ref: '#/components/schemas/AppTypeTile'
          description: Percentage by OS.
        subscriptionPeriods:
          items:
            $ref: '#/components/schemas/SubscriptionPeriodTile'
          type: array
          description: Percentage per friendship duration.
    GenderTile:
      type: object
      properties:
        gender:
          type: string
          enum:
          - male
          - female
          - unknown
          description: users' gender
        percentage:
          type: number
          format: double
          description: Percentage
    AgeTile:
      type: object
      properties:
        age:
          type: string
          enum:
          - from0to14
          - from15to19
          - from20to24
          - from25to29
          - from30to34
          - from35to39
          - from40to44
          - from45to49
          - from50
          - from50to54
          - from55to59
          - from60to64
          - from65to69
          - from70
          - unknown
          description: users' age
        percentage:
          type: number
          format: double
          description: Percentage
    AreaTile:
      type: object
      properties:
        area:
          type: string
          description: users' country and region
        percentage:
          type: number
          format: double
          description: Percentage
    AppTypeTile:
      properties:
        appType:
          type: string
          enum:
          - ios
          - android
          - others
          description: users' OS
        percentage:
          format: double
          type: number
          description: Percentage
      type: object
    SubscriptionPeriodTile:
      properties:
        subscriptionPeriod:
          type: string
          description: 'Subscription period. Possible values: `within7days`, `within90days`,
            `unknown` etc.'
          enum:
          - within7days
          - within30days
          - within90days
          - within180days
          - within365days
          - over365days
          - unknown
        percentage:
          format: double
          type: number
          description: 'Percentage. Possible values: [0.0,100.0] e.g. 0, 2.9, 37.6.'
      type: object
    GetNumberOfMessageDeliveriesResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-number-of-delivery-messages
      description: Get number of message deliveries
      type: object
      properties:
        status:
          type: string
          enum:
          - ready
          - unready
          - out_of_service
          description: Status of the counting process.
        broadcast:
          format: int64
          type: integer
          description: Number of messages sent to all of this LINE Official Account's
            friends (broadcast messages).
        targeting:
          format: int64
          type: integer
          description: Number of messages sent to some of this LINE Official Account's
            friends, based on specific attributes (targeted messages).
        autoResponse:
          format: int64
          type: integer
          description: Number of auto-response messages sent.
        welcomeResponse:
          format: int64
          type: integer
          description: Number of greeting messages sent.
        chat:
          format: int64
          type: integer
          description: Number of messages sent from LINE Official Account Manager
            [Chat screen](https://www.linebiz.com/jp/manual/OfficialAccountManager/chats/)
            (only available in Japanese).
        apiBroadcast:
          format: int64
          type: integer
          description: Number of broadcast messages sent with the `Send broadcast
            message` Messaging API operation.
        apiPush:
          format: int64
          type: integer
          description: Number of push messages sent with the `Send push message` Messaging
            API operation.
        apiMulticast:
          format: int64
          type: integer
          description: Number of multicast messages sent with the `Send multicast
            message` Messaging API operation.
        apiNarrowcast:
          format: int64
          type: integer
          description: Number of narrowcast messages sent with the `Send narrowcast
            message` Messaging API operation.
        apiReply:
          format: int64
          type: integer
          description: Number of replies sent with the `Send reply message` Messaging
            API operation.
    GetNumberOfFollowersResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-number-of-followers
      description: Get number of followers
      type: object
      properties:
        status:
          description: Calculation status.
          type: string
          enum:
          - ready
          - unready
          - out_of_service
        followers:
          type: integer
          format: int64
          description: 'The number of times, as of the specified date, that a user
            added this LINE Official Account as a friend for the first time.

            The number doesn''t decrease even if a user later blocks the account or
            when they delete their LINE account.

            '
        targetedReaches:
          format: int64
          type: integer
          description: 'The number of users, as of the specified date, that the LINE
            Official Account can reach through targeted messages based on gender,
            age, and/or region.

            This number only includes users who are active on LINE or LINE services
            and whose demographics have a high level of certainty.

            '
        blocks:
          type: integer
          format: int64
          description: 'The number of users blocking the account as of the specified
            date.

            The number decreases when a user unblocks the account.



            '
    GetMessageEventResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-insight-message-event-response
      description: Statistics about how users interact with narrowcast messages or
        broadcast messages sent from your LINE Official Account.
      properties:
        overview:
          $ref: '#/components/schemas/GetMessageEventResponseOverview'
        messages:
          description: Array of information about individual message bubbles.
          type: array
          items:
            $ref: '#/components/schemas/GetMessageEventResponseMessage'
        clicks:
          description: Array of information about opened URLs in the message.
          type: array
          items:
            $ref: '#/components/schemas/GetMessageEventResponseClick'
      type: object
    GetMessageEventResponseOverview:
      description: Summary of message statistics.
      type: object
      properties:
        requestId:
          type: string
          description: Request ID.
        timestamp:
          format: int64
          type: integer
          description: UNIX timestamp for message delivery time in seconds.
        delivered:
          format: int64
          type: integer
          description: 'Number of messages delivered.

            This property shows values of less than 20.

            However, if all messages have not been sent, it will be null.

            '
        uniqueImpression:
          format: int64
          type: integer
          description: Number of users who opened the message, meaning they displayed
            at least 1 bubble.
          nullable: true
        uniqueClick:
          format: int64
          type: integer
          description: Number of users who opened any URL in the message.
          nullable: true
        uniqueMediaPlayed:
          format: int64
          type: integer
          description: Number of users who started playing any video or audio in the
            message.
          nullable: true
        uniqueMediaPlayed100Percent:
          format: int64
          type: integer
          description: Number of users who played the entirety of any video or audio
            in the message.
          nullable: true
    GetMessageEventResponseMessage:
      type: object
      properties:
        seq:
          format: int32
          type: integer
          description: Bubble's serial number.
        impression:
          format: int64
          type: integer
          description: Number of times the bubble was displayed.
          nullable: true
        mediaPlayed:
          format: int64
          type: integer
          description: Number of times audio or video in the bubble started playing.
          nullable: true
        mediaPlayed25Percent:
          format: int64
          type: integer
          description: Number of times audio or video in the bubble started playing
            and was played 25% of the total time.
          nullable: true
        mediaPlayed50Percent:
          format: int64
          type: integer
          description: Number of times audio or video in the bubble started playing
            and was played 50% of the total time.
          nullable: true
        mediaPlayed75Percent:
          format: int64
          type: integer
          description: Number of times audio or video in the bubble started playing
            and was played 75% of the total time.
          nullable: true
        mediaPlayed100Percent:
          format: int64
          type: integer
          description: Number of times audio or video in the bubble started playing
            and was played 100% of the total time.
          nullable: true
        uniqueMediaPlayed:
          format: int64
          type: integer
          description: Number of users that started playing audio or video in the
            bubble.
          nullable: true
        uniqueMediaPlayed25Percent:
          format: int64
          type: integer
          description: Number of users that started playing audio or video in the
            bubble and played 25% of the total time.
          nullable: true
        uniqueMediaPlayed50Percent:
          format: int64
          type: integer
          description: Number of users that started playing audio or video in the
            bubble and played 50% of the total time.
          nullable: true
        uniqueMediaPlayed75Percent:
          format: int64
          type: integer
          description: Number of users that started playing audio or video in the
            bubble and played 75% of the total time.
          nullable: true
        uniqueMediaPlayed100Percent:
          format: int64
          type: integer
          description: Number of users that started playing audio or video in the
            bubble and played 100% of the total time.
          nullable: true
    GetMessageEventResponseClick:
      type: object
      properties:
        seq:
          type: integer
          format: int32
          description: The URL's serial number.
        url:
          type: string
          description: URL.
        click:
          type: integer
          format: int64
          description: Number of times the URL was opened.
          nullable: true
        uniqueClick:
          type: integer
          format: int64
          description: Number of users that opened the URL.
          nullable: true
        uniqueClickOfRequest:
          type: integer
          format: int64
          description: Number of users who opened this url through any link in the
            message. If a message contains two links to the same URL and a user opens
            both links, they're counted only once.
          nullable: true
    GetStatisticsPerUnitResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-statistics-per-unit-response
      description: Response object for `get statistics per unit`
      type: object
      properties:
        overview:
          $ref: '#/components/schemas/GetStatisticsPerUnitResponseOverview'
        messages:
          description: Array of information about individual message bubbles.
          type: array
          items:
            $ref: '#/components/schemas/GetStatisticsPerUnitResponseMessage'
        clicks:
          description: Array of information about opened URLs in the message.
          type: array
          items:
            $ref: '#/components/schemas/GetStatisticsPerUnitResponseClick'
      required:
      - clicks
      - messages
      - overview
    GetStatisticsPerUnitResponseOverview:
      description: Statistics related to messages.
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-statistics-per-unit-response
      type: object
      properties:
        uniqueImpression:
          format: int64
          type: integer
          description: Number of users who opened the message, meaning they displayed
            at least 1 bubble.
          nullable: true
        uniqueClick:
          format: int64
          type: integer
          description: Number of users who opened any URL in the message.
          nullable: true
        uniqueMediaPlayed:
          format: int64
          type: integer
          description: Number of users who started playing any video or audio in the
            message.
          nullable: true
        uniqueMediaPlayed100Percent:
          format: int64
          type: integer
          description: Number of users who played the entirety of any video or audio
            in the message.
          nullable: true
    GetStatisticsPerUnitResponseMessage:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-statistics-per-unit-response
      required:
      - seq
      type: object
      properties:
        seq:
          format: int32
          type: integer
          description: Bubble's serial number.
        impression:
          format: int64
          type: integer
          description: Number of times the bubble was displayed.
          nullable: true
        mediaPlayed:
          format: int64
          type: integer
          description: Number of times audio or video in the bubble started playing.
          nullable: true
        mediaPlayed25Percent:
          format: int64
          type: integer
          description: Number of times audio or video in the bubble started playing
            and was played 25% of the total time.
          nullable: true
        mediaPlayed50Percent:
          format: int64
          type: integer
          description: Number of times audio or video in the bubble started playing
            and was played 50% of the total time.
          nullable: true
        mediaPlayed75Percent:
          format: int64
          type: integer
          description: Number of times audio or video in the bubble started playing
            and was played 75% of the total time.
          nullable: true
        mediaPlayed100Percent:
          format: int64
          type: integer
          description: Number of times audio or video in the bubble started playing
            and was played 100% of the total time.
          nullable: true
        uniqueImpression:
          format: int64
          type: integer
          description: Number of users the bubble was displayed.
          nullable: true
        uniqueMediaPlayed:
          format: int64
          type: integer
          description: Number of users that started playing audio or video in the
            bubble.
          nullable: true
        uniqueMediaPlayed25Percent:
          format: int64
          type: integer
          description: Number of users that started playing audio or video in the
            bubble and played 25% of the total time.
          nullable: true
        uniqueMediaPlayed50Percent:
          format: int64
          type: integer
          description: Number of users that started playing audio or video in the
            bubble and played 50% of the total time.
          nullable: true
        uniqueMediaPlayed75Percent:
          format: int64
          type: integer
          description: Number of users that started playing audio or video in the
            bubble and played 75% of the total time.
          nullable: true
        uniqueMediaPlayed100Percent:
          format: int64
          type: integer
          description: Number of users that started playing audio or video in the
            bubble and played 100% of the total time.
          nullable: true
    GetStatisticsPerUnitResponseClick:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-statistics-per-unit-response
      type: object
      properties:
        seq:
          format: int64
          type: integer
          description: The URL's serial number.
        url:
          type: string
          description: URL.
        click:
          format: int64
          type: integer
          description: Number of times the URL in the bubble was opened.
          nullable: true
        uniqueClick:
          format: int64
          type: integer
          description: Number of users that opened the URL in the bubble.
          nullable: true
        uniqueClickOfRequest:
          format: int64
          type: integer
          description: 'Number of users who opened this url through any link in the
            message.

            If another message bubble contains the same URL and a user opens both
            links, it''s counted only once.

            '
          nullable: true
      required:
      - seq
      - url
    CallbackRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#request-body
      description: 'The request body contains a JSON object with the user ID of a
        bot that should receive webhook events and an array of webhook event objects.

        '
      type: object
      required:
      - destination
      - events
      properties:
        destination:
          type: string
          description: 'User ID of a bot that should receive webhook events.

            The user ID value is a string that matches the regular expression, `U[0-9a-f]{32}`.

            '
          pattern: ^U[0-9a-f]{32}$
          maxLength: 33
          minLength: 33
        events:
          description: 'Array of webhook event objects.

            The LINE Platform may send an empty array that doesn''t include a webhook
            event object to confirm communication.

            '
          type: array
          items:
            $ref: '#/components/schemas/Event'
    Event:
      description: Webhook event
      required:
      - type
      - timestamp
      - mode
      - webhookEventId
      - deliveryContext
      type: object
      properties:
        type:
          type: string
          description: Type of the event
        source:
          $ref: '#/components/schemas/Source'
        timestamp:
          type: integer
          format: int64
          description: Time of the event in milliseconds.
        mode:
          $ref: '#/components/schemas/EventMode'
        webhookEventId:
          type: string
          description: Webhook Event ID. An ID that uniquely identifies a webhook
            event. This is a string in ULID format.
        deliveryContext:
          $ref: '#/components/schemas/DeliveryContext'
      discriminator:
        propertyName: type
        mapping:
          message: '#/components/schemas/MessageEvent'
          unsend: '#/components/schemas/UnsendEvent'
          follow: '#/components/schemas/FollowEvent'
          unfollow: '#/components/schemas/UnfollowEvent'
          join: '#/components/schemas/JoinEvent'
          leave: '#/components/schemas/LeaveEvent'
          memberJoined: '#/components/schemas/MemberJoinedEvent'
          memberLeft: '#/components/schemas/MemberLeftEvent'
          postback: '#/components/schemas/PostbackEvent'
          videoPlayComplete: '#/components/schemas/VideoPlayCompleteEvent'
          beacon: '#/components/schemas/BeaconEvent'
          accountLink: '#/components/schemas/AccountLinkEvent'
          things: '#/components/schemas/ThingsEvent'
          module: '#/components/schemas/ModuleEvent'
          activated: '#/components/schemas/ActivatedEvent'
          deactivated: '#/components/schemas/DeactivatedEvent'
          botSuspended: '#/components/schemas/BotSuspendedEvent'
          botResumed: '#/components/schemas/BotResumedEvent'
          delivery: '#/components/schemas/PnpDeliveryCompletionEvent'
    EventMode:
      type: string
      description: Channel state.
      enum:
      - active
      - standby
    DeliveryContext:
      type: object
      description: webhook's delivery context information
      required:
      - isRedelivery
      properties:
        isRedelivery:
          type: boolean
          description: Whether the webhook event is a redelivered one or not.
    Source:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#source-user
      description: the source of the event.
      type: object
      properties:
        type:
          type: string
          description: source type
      discriminator:
        propertyName: type
        mapping:
          user: '#/components/schemas/UserSource'
          group: '#/components/schemas/GroupSource'
          room: '#/components/schemas/RoomSource'
    UserSource:
      allOf:
      - $ref: '#/components/schemas/Source'
      - type: object
        required:
        - type
        properties:
          userId:
            type: string
            description: ID of the source user
    GroupSource:
      allOf:
      - $ref: '#/components/schemas/Source'
      - type: object
        required:
        - type
        - groupId
        properties:
          groupId:
            type: string
            description: Group ID of the source group chat
          userId:
            type: string
            description: ID of the source user. Only included in message events. Only
              users of LINE for iOS and LINE for Android are included in userId.
    RoomSource:
      allOf:
      - $ref: '#/components/schemas/Source'
      - type: object
        required:
        - type
        - roomId
        description: Source multi-person chat
        properties:
          userId:
            type: string
            description: ID of the source user. Only included in message events. Only
              users of LINE for iOS and LINE for Android are included in userId.
          roomId:
            type: string
            description: Room ID of the source multi-person chat
    MessageEvent:
      description: Webhook event object which contains the sent message.
      type: object
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - type
        - message
        properties:
          replyToken:
            type: string
          message:
            $ref: '#/components/schemas/MessageContent'
    MessageContent:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#message-event
      type: object
      required:
      - type
      - id
      properties:
        type:
          type: string
          description: Type
        id:
          type: string
          description: Message ID
      discriminator:
        propertyName: type
        mapping:
          text: '#/components/schemas/TextMessageContent'
          image: '#/components/schemas/ImageMessageContent'
          video: '#/components/schemas/VideoMessageContent'
          audio: '#/components/schemas/AudioMessageContent'
          file: '#/components/schemas/FileMessageContent'
          location: '#/components/schemas/LocationMessageContent'
          sticker: '#/components/schemas/StickerMessageContent'
    ContentProvider:
      description: Provider of the media file.
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: Provider of the image file.
          enum:
          - line
          - external
        originalContentUrl:
          type: string
          format: uri
          description: URL of the image file. Only included when contentProvider.type
            is external.
        previewImageUrl:
          format: uri
          type: string
          description: URL of the preview image. Only included when contentProvider.type
            is external.
    TextMessageContent:
      allOf:
      - $ref: '#/components/schemas/MessageContent'
      - type: object
        required:
        - text
        - quoteToken
        properties:
          text:
            type: string
            description: Message text.
          emojis:
            description: Array of one or more LINE emoji objects. Only included in
              the message event when the text property contains a LINE emoji.
            type: array
            items:
              $ref: '#/components/schemas/Emoji'
          mention:
            $ref: '#/components/schemas/Mention'
          quoteToken:
            type: string
            description: 'Quote token to quote this message.

              '
          quotedMessageId:
            type: string
            description: Message ID of a quoted message. Only included when the received
              message quotes a past message.
    Mention:
      required:
      - mentionees
      type: object
      properties:
        mentionees:
          description: 'Array of one or more mention objects. Max: 20 mentions'
          type: array
          items:
            $ref: '#/components/schemas/Mentionee'
    Mentionee:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#wh-text
      required:
      - type
      - index
      - length
      type: object
      properties:
        type:
          type: string
          description: Mentioned target.
        index:
          type: integer
          format: int32
          description: Index position of the user mention for a character in text,
            with the first character being at position 0.
        length:
          type: integer
          format: int32
          description: The length of the text of the mentioned user. For a mention
            @example, 8 is the length.
      discriminator:
        propertyName: type
        mapping:
          user: '#/components/schemas/UserMentionee'
          all: '#/components/schemas/AllMentionee'
    UserMentionee:
      description: Mentioned target is user
      allOf:
      - $ref: '#/components/schemas/Mentionee'
      - type: object
        properties:
          userId:
            type: string
            description: User ID of the mentioned user. Only included if mention.mentions[].type
              is user and the user consents to the LINE Official Account obtaining
              their user profile information.
          isSelf:
            type: boolean
            description: Whether the mentioned user is the bot that receives the webhook.
    AllMentionee:
      description: Mentioned target is entire group
      allOf:
      - $ref: '#/components/schemas/Mentionee'
      - type: object
    ImageMessageContent:
      allOf:
      - $ref: '#/components/schemas/MessageContent'
      - type: object
        required:
        - contentProvider
        - quoteToken
        properties:
          contentProvider:
            $ref: '#/components/schemas/ContentProvider'
          imageSet:
            $ref: '#/components/schemas/ImageSet'
          quoteToken:
            type: string
            description: 'Quote token to quote this message.

              '
    ImageSet:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          description: Image set ID. Only included when multiple images are sent simultaneously.
        index:
          type: integer
          description: An index starting from 1, indicating the image number in a
            set of images sent simultaneously. Only included when multiple images
            are sent simultaneously. However, it won't be included if the sender is
            using LINE 11.15 or earlier for Android.
        total:
          type: integer
          description: The total number of images sent simultaneously.
    VideoMessageContent:
      allOf:
      - $ref: '#/components/schemas/MessageContent'
      - type: object
        required:
        - contentProvider
        - quoteToken
        description: Message object which contains the video content sent from the
          source. The preview image is displayed in the chat and the video is played
          when the image is tapped.
        properties:
          duration:
            type: integer
            format: int64
            description: Length of video file (milliseconds)
          contentProvider:
            $ref: '#/components/schemas/ContentProvider'
          quoteToken:
            type: string
            description: 'Quote token to quote this message.

              '
    AudioMessageContent:
      allOf:
      - $ref: '#/components/schemas/MessageContent'
      - type: object
        required:
        - contentProvider
        description: Message object which contains the audio content sent from the
          source.
        properties:
          contentProvider:
            $ref: '#/components/schemas/ContentProvider'
          duration:
            type: integer
            format: int64
            description: Length of audio file (milliseconds)
    FileMessageContent:
      allOf:
      - $ref: '#/components/schemas/MessageContent'
      - type: object
        required:
        - fileName
        - fileSize
        description: Message object which contains the file sent from the source.
        properties:
          fileName:
            type: string
            description: File name
          fileSize:
            type: integer
            description: File size in bytes
    LocationMessageContent:
      allOf:
      - $ref: '#/components/schemas/MessageContent'
      - type: object
        required:
        - latitude
        - longitude
        description: Message object which contains the location data sent from the
          source.
        properties:
          title:
            type: string
            description: Title
          address:
            type: string
            description: Address
          latitude:
            type: number
            format: double
            description: Latitude
          longitude:
            type: number
            format: double
            description: Longitude
    StickerMessageContent:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#wh-sticker
      allOf:
      - $ref: '#/components/schemas/MessageContent'
      - type: object
        required:
        - packageId
        - stickerId
        - stickerResourceType
        - quoteToken
        description: Message object which contains the sticker data sent from the
          source.
        properties:
          packageId:
            type: string
            description: Package ID
          stickerId:
            type: string
            description: Sticker ID
          stickerResourceType:
            type: string
            enum:
            - STATIC
            - ANIMATION
            - SOUND
            - ANIMATION_SOUND
            - POPUP
            - POPUP_SOUND
            - CUSTOM
            - MESSAGE
            - NAME_TEXT
            - PER_STICKER_TEXT
          keywords:
            type: array
            maxItems: 15
            items:
              type: string
            description: 'Array of up to 15 keywords describing the sticker.

              If a sticker has 16 or more keywords, a random selection of 15 keywords
              will be returned.

              The keyword selection is random for each event, so different keywords
              may be returned for the same sticker.

              '
          text:
            type: string
            description: 'Any text entered by the user. This property is only included
              for message stickers.

              Max character limit: 100

              '
            maxLength: 100
          quoteToken:
            type: string
            description: 'Quote token to quote this message.

              '
          quotedMessageId:
            type: string
            description: 'Message ID of a quoted message. Only included when the received
              message quotes a past message.


              '
    UnsendEvent:
      description: Event object for when the user unsends a message.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - unsend
        properties:
          unsend:
            $ref: '#/components/schemas/UnsendDetail'
    UnsendDetail:
      required:
      - messageId
      type: object
      properties:
        messageId:
          type: string
          description: The message ID of the unsent message
    FollowEvent:
      description: Event object for when your LINE Official Account is added as a
        friend (or unblocked). You can reply to follow events.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - replyToken
        - follow
        properties:
          replyToken:
            type: string
            description: Reply token used to send reply message to this event
          follow:
            $ref: '#/components/schemas/FollowDetail'
    FollowDetail:
      type: object
      required:
      - isUnblocked
      properties:
        isUnblocked:
          type: boolean
          description: Whether a user has added your LINE Official Account as a friend
            or unblocked.
    UnfollowEvent:
      description: Event object for when your LINE Official Account is blocked.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
    JoinEvent:
      description: Event object for when your LINE Official Account joins a group
        chat or multi-person chat. You can reply to join events.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - replyToken
        properties:
          replyToken:
            type: string
            description: Reply token used to send reply message to this event
    LeaveEvent:
      description: Event object for when a user removes your LINE Official Account
        from a group chat or when your LINE Official Account leaves a group chat or
        multi-person chat.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
    MemberJoinedEvent:
      description: Event object for when a user joins a group chat or multi-person
        chat that the LINE Official Account is in.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - replyToken
        - joined
        properties:
          replyToken:
            type: string
            description: Reply token used to send reply message to this event
          joined:
            $ref: '#/components/schemas/JoinedMembers'
    JoinedMembers:
      required:
      - members
      type: object
      properties:
        members:
          description: Users who joined. Array of source user objects.
          type: array
          items:
            $ref: '#/components/schemas/UserSource'
    MemberLeftEvent:
      description: Event object for when a user leaves a group chat or multi-person
        chat that the LINE Official Account is in.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - left
        properties:
          left:
            $ref: '#/components/schemas/LeftMembers'
    LeftMembers:
      required:
      - members
      type: object
      properties:
        members:
          description: Users who left. Array of source user objects.
          type: array
          items:
            $ref: '#/components/schemas/UserSource'
    PostbackEvent:
      description: Event object for when a user performs a postback action which initiates
        a postback. You can reply to postback events.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - postback
        properties:
          replyToken:
            type: string
            description: Reply token used to send reply message to this event
          postback:
            $ref: '#/components/schemas/PostbackContent'
    PostbackContent:
      type: object
      required:
      - data
      properties:
        data:
          type: string
          description: Postback data
        params:
          type: object
          additionalProperties:
            type: string
    VideoPlayCompleteEvent:
      description: Event for when a user finishes viewing a video at least once with
        the specified trackingId sent by the LINE Official Account.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - replyToken
        - videoPlayComplete
        properties:
          replyToken:
            type: string
            description: Reply token used to send reply message to this event
          videoPlayComplete:
            $ref: '#/components/schemas/VideoPlayComplete'
    VideoPlayComplete:
      required:
      - trackingId
      type: object
      properties:
        trackingId:
          type: string
          description: ID used to identify a video. Returns the same value as the
            trackingId assigned to the video message.
    BeaconEvent:
      description: Event object for when a user enters the range of a LINE Beacon.
        You can reply to beacon events.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - replyToken
        - beacon
        properties:
          replyToken:
            type: string
            description: Reply token used to send reply message to this event
          beacon:
            $ref: '#/components/schemas/BeaconContent'
    BeaconContent:
      required:
      - hwid
      - type
      type: object
      properties:
        hwid:
          type: string
          description: Hardware ID of the beacon that was detected
        type:
          type: string
          description: Type of beacon event.
          enum:
          - enter
          - banner
          - stay
        dm:
          type: string
          description: Device message of beacon that was detected.
    AccountLinkEvent:
      description: Event object for when a user has linked their LINE account with
        a provider's service account. You can reply to account link events.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - link
        properties:
          replyToken:
            type: string
            description: Reply token used to send reply message to this event. This
              property won't be included if linking the account has failed.
          link:
            $ref: '#/components/schemas/LinkContent'
    LinkContent:
      description: Content of the account link event.
      required:
      - result
      - nonce
      type: object
      properties:
        result:
          type: string
          enum:
          - ok
          - failed
          description: One of the following values to indicate whether linking the
            account was successful or not
        nonce:
          type: string
          description: Specified nonce (number used once) when verifying the user
            ID.
    ThingsEvent:
      description: Indicates that a user linked a device with LINE.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - replyToken
        - things
        properties:
          replyToken:
            type: string
            description: Reply token used to send reply message to this event
          things:
            $ref: '#/components/schemas/ThingsContent'
    ThingsContent:
      type: object
      required:
      - type
      properties:
        type:
          type: string
          description: Type
      discriminator:
        propertyName: type
        mapping:
          link: '#/components/schemas/LinkThingsContent'
          unlink: '#/components/schemas/UnlinkThingsContent'
          scenarioResult: '#/components/schemas/ScenarioResultThingsContent'
    LinkThingsContent:
      allOf:
      - $ref: '#/components/schemas/ThingsContent'
      - type: object
        required:
        - deviceId
        description: Indicates that a user linked a device with LINE.
        properties:
          deviceId:
            type: string
            description: Device ID of the device that has been linked with LINE.
    UnlinkThingsContent:
      allOf:
      - $ref: '#/components/schemas/ThingsContent'
      - type: object
        required:
        - deviceId
        description: Indicates that the user unlinked a device from LINE.
        properties:
          deviceId:
            type: string
            description: Device ID of the device that has been linked with LINE.
    ScenarioResultThingsContent:
      allOf:
      - $ref: '#/components/schemas/ThingsContent'
      - type: object
        required:
        - deviceId
        - result
        description: This event indicates that an automatic communication scenario
          has been executed.
        properties:
          deviceId:
            type: string
            description: Device ID of the device that has been linked with LINE.
          result:
            $ref: '#/components/schemas/ScenarioResult'
    ScenarioResult:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#scenario-result-event
      required:
      - startTime
      - endTime
      - resultCode
      type: object
      properties:
        scenarioId:
          type: string
          description: Scenario ID executed
        revision:
          type: integer
          description: Revision number of the scenario set containing the executed
            scenario
        startTime:
          type: integer
          format: int64
          description: Timestamp for when execution of scenario action started (milliseconds,
            LINE app time)
        endTime:
          type: integer
          format: int64
          description: Timestamp for when execution of scenario was completed (milliseconds,
            LINE app time)
        resultCode:
          type: string
          description: Scenario execution completion status
        actionResults:
          description: Execution result of individual operations specified in action.
            Only included when things.result.resultCode is success.
          type: array
          items:
            $ref: '#/components/schemas/ActionResult'
        bleNotificationPayload:
          description: Data contained in notification.
          type: string
        errorReason:
          description: Error reason.
          type: string
    ActionResult:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          enum:
          - void
          - binary
        data:
          description: Base64-encoded binary data
          type: string
    ModuleEvent:
      description: This event indicates that the module channel has been attached
        to the LINE Official Account. Sent to the webhook URL server of the module
        channel.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - module
        properties:
          module:
            $ref: '#/components/schemas/ModuleContent'
    ModuleContent:
      type: object
      required:
      - type
      properties:
        type:
          type: string
          description: Type
      discriminator:
        propertyName: type
        mapping:
          attached: '#/components/schemas/AttachedModuleContent'
          detached: '#/components/schemas/DetachedModuleContent'
    AttachedModuleContent:
      allOf:
      - $ref: '#/components/schemas/ModuleContent'
      - type: object
        required:
        - botId
        - scopes
        properties:
          botId:
            description: User ID of the bot on the attached LINE Official Account
            type: string
          scopes:
            description: An array of strings indicating the scope permitted by the
              admin of the LINE Official Account.
            type: array
            items:
              type: string
    DetachedModuleContent:
      allOf:
      - $ref: '#/components/schemas/ModuleContent'
      - type: object
        required:
        - botId
        - reason
        properties:
          botId:
            description: Detached LINE Official Account bot user ID
            type: string
          reason:
            description: Reason for detaching
            type: string
            enum:
            - bot_deleted
    ActivatedEvent:
      description: This event indicates that the module channel has been switched
        to Active Channel by calling the Acquire Control API. Sent to the webhook
        URL server of the module channel.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - chatControl
        properties:
          chatControl:
            $ref: '#/components/schemas/ChatControl'
    ChatControl:
      required:
      - expireAt
      type: object
      properties:
        expireAt:
          type: integer
          format: int64
    DeactivatedEvent:
      description: This event indicates that the module channel has been switched
        to Standby Channel by calling Acquire Control API or Release Control API.
        Sent to the webhook URL server of the module channel.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
    BotSuspendedEvent:
      description: This event indicates that the LINE Official Account has been suspended
        (Suspend). Sent to the webhook URL server of the module channel.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
    BotResumedEvent:
      description: This event indicates that the LINE Official Account has returned
        from the suspended state. Sent to the webhook URL server of the module channel.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
    PnpDeliveryCompletionEvent:
      description: When a request is made to the LINE notification messages API and
        delivery of the LINE notification message to the user is completed, a dedicated
        webhook event (delivery completion event) is sent from the LINE Platform to
        the webhook URL of the bot server.
      allOf:
      - $ref: '#/components/schemas/Event'
      - type: object
        required:
        - delivery
        properties:
          delivery:
            $ref: '#/components/schemas/PnpDelivery'
    PnpDelivery:
      description: A delivery object containing a hashed phone number string or a
        string specified by `X-Line-Delivery-Tag` header
      type: object
      required:
      - data
      properties:
        data:
          type: string
          description: A hashed phone number string or a string specified by `X-Line-Delivery-Tag`
            header
    DetachModuleRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#unlink-detach-module-channel-by-operation-mc-admin
      type: object
      description: Unlink (detach) the module channel by the operation of the module
        channel administrator
      properties:
        botId:
          description: User ID of the LINE Official Account bot attached to the module
            channel.
          type: string
    AcquireChatControlRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#acquire-control-api
      description: Request entity of the Acquire Control API
      type: object
      properties:
        expired:
          type: boolean
          description: '`True`: After the time limit (ttl) has passed, the initiative
            (Chat Control) will return to the Primary Channel. (Default)

            `False`: There''s no time limit and the initiative (Chat Control) doesn''t
            change over time.

            '
          example: true
        ttl:
          type: integer
          format: int32
          maximum: 31536000
          description: 'The time it takes for initiative (Chat Control) to return
            to the Primary Channel (the time that the module channel stays on the
            Active Channel).

            The value is specified in seconds. The maximum value is one year (3600
            * 24 * 365).

            The default value is 3600 (1 hour).


            * Ignored if the value of expired is false.

            '
          example: 3600
    GetModulesResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#get-multiple-bot-info-api
      description: List of bots to which the module is attached
      required:
      - bots
      type: object
      properties:
        bots:
          type: array
          items:
            $ref: '#/components/schemas/ModuleBot'
          description: Array of Bot list Item objects representing basic information
            about the bot.
        next:
          type: string
          description: 'Continuation token.

            Used to get the next array of basic bot information.

            This property is only returned if there are more unreturned results.

            '
    ModuleBot:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#get-multiple-bot-info-api
      description: basic information about the bot.
      required:
      - userId
      - basicId
      - displayName
      type: object
      properties:
        userId:
          type: string
          description: Bot's user ID
        basicId:
          type: string
          description: Bot's basic ID
        premiumId:
          type: string
          description: Bot's premium ID. Not included in the response if the premium
            ID isn't set.
        displayName:
          type: string
          description: Bot's display name
        pictureUrl:
          type: string
          description: Profile image URL. Image URL starting with `https://`. Not
            included in the response if the bot doesn't have a profile image.
    AddLiffAppRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/liff-server/#add-liff-app
      type: object
      required:
      - view
      properties:
        view:
          $ref: '#/components/schemas/LiffView'
        description:
          type: string
          description: 'Name of the LIFF app.


            The LIFF app name can''t include "LINE" or similar strings, or inappropriate
            strings.

            '
        features:
          $ref: '#/components/schemas/LiffFeatures'
        permanentLinkPattern:
          type: string
          description: 'How additional information in LIFF URLs is handled. Specify
            `concat`.

            '
        scope:
          type: array
          items:
            $ref: '#/components/schemas/LiffScope'
        botPrompt:
          $ref: '#/components/schemas/LiffBotPrompt'
    LiffBotPrompt:
      type: string
      description: "Specify the setting for bot link feature with one of the following\
        \ values:\n\n`normal`: Display the option to add the LINE Official Account\
        \ as a friend in the channel consent screen.\n`aggressive`: Display a screen\
        \ with the option to add the LINE Official Account as a friend after the channel\
        \ consent screen.\n`none`: Don't display the option to add the LINE Official\
        \ Account as a friend.\n  The default value is none.\n"
      enum:
      - normal
      - aggressive
      - none
    LiffView:
      externalDocs:
        url: https://developers.line.biz/en/reference/liff-server/#add-liff-app
      type: object
      required:
      - type
      - url
      properties:
        type:
          description: 'Size of the LIFF app view. Specify one of these values:

            - compact

            - tall

            - full

            '
          type: string
          enum:
          - compact
          - tall
          - full
        url:
          type: string
          format: uri
          description: 'Endpoint URL. This is the URL of the web app that implements
            the LIFF app

            (e.g. https://example.com).

            Used when the LIFF app is launched using the LIFF URL.

            The URL scheme must be https. URL fragments (#URL-fragment) can''t be
            specified.

            '
        moduleMode:
          type: boolean
          description: '`true` to use the LIFF app in modular mode.

            When in modular mode, the action button in the header is not displayed.

            '
    UpdateLiffView:
      externalDocs:
        url: https://developers.line.biz/en/reference/liff-server/#update-liff-app
      type: object
      properties:
        type:
          description: 'Size of the LIFF app view. Specify one of these values:

            - compact

            - tall

            - full

            '
          type: string
          enum:
          - compact
          - tall
          - full
        url:
          type: string
          format: uri
          description: 'Endpoint URL. This is the URL of the web app that implements
            the LIFF app

            (e.g. https://example.com).

            Used when the LIFF app is launched using the LIFF URL.

            The URL scheme must be https. URL fragments (#URL-fragment) can''t be
            specified.

            '
        moduleMode:
          type: boolean
          description: '`true` to use the LIFF app in modular mode.

            When in modular mode, the action button in the header is not displayed.

            '
    LiffFeatures:
      type: object
      properties:
        ble:
          type: boolean
          description: "`true` if the LIFF app supports Bluetooth\xAE Low Energy for\
            \ LINE Things. `false` otherwise.\n"
        qrCode:
          type: boolean
          description: '`true` to use the 2D code reader in the LIFF app. false otherwise.
            The default value is `false`.

            '
          default: false
    AddLiffAppResponse:
      type: object
      required:
      - liffId
      properties:
        liffId:
          type: string
    UpdateLiffAppRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/liff-server/#add-liff-app
      type: object
      properties:
        view:
          $ref: '#/components/schemas/UpdateLiffView'
        description:
          type: string
          description: 'Name of the LIFF app.


            The LIFF app name can''t include "LINE" or similar strings, or inappropriate
            strings.

            '
        features:
          $ref: '#/components/schemas/LiffFeatures'
        permanentLinkPattern:
          type: string
          description: 'How additional information in LIFF URLs is handled. Specify
            `concat`.

            '
        scope:
          type: array
          items:
            $ref: '#/components/schemas/LiffScope'
        botPrompt:
          $ref: '#/components/schemas/LiffBotPrompt'
    LiffScope:
      type: string
      enum:
      - openid
      - email
      - profile
      - chat_message.write
      description: 'Array of scopes required for some LIFF SDK methods to function.

        The default value is `["profile", "chat_message.write"]`.


        '
    GetAllLiffAppsResponse:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/LiffApp'
    LiffApp:
      type: object
      properties:
        liffId:
          type: string
          description: LIFF app ID
        view:
          $ref: '#/components/schemas/LiffView'
        description:
          type: string
          description: Name of the LIFF app
        features:
          $ref: '#/components/schemas/LiffFeatures'
        permanentLinkPattern:
          type: string
          description: 'How additional information in LIFF URLs is handled. concat
            is returned.

            '
        scope:
          type: array
          items:
            $ref: '#/components/schemas/LiffScope'
        botPrompt:
          $ref: '#/components/schemas/LiffBotPrompt'
    AttachModuleResponse:
      description: Attach by operation of the module channel provider
      required:
      - bot_id
      - scopes
      properties:
        bot_id:
          type: string
          description: User ID of the bot on the LINE Official Account.
        scopes:
          type: array
          description: Permissions (scope) granted by the LINE Official Account admin.
          items:
            type: string
    MissionStickerRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/partner-docs/#send-mission-stickers-v3
      description: Send mission stickers (v3)
      required:
      - to
      - productId
      - productType
      - sendPresentMessage
      type: object
      properties:
        to:
          type: string
          description: Destination user ID
        productId:
          type: string
          description: Package ID for a set of stickers
        productType:
          type: string
          description: '`STICKER`'
          example: STICKER
        sendPresentMessage:
          type: boolean
          description: '`false`'
          example: false
    IssueStatelessChannelTokenByJWTAssertionRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token
      description: Request body to issue a new token with JWT assertion
      type: object
      required:
      - grant_type
      - client_assertion
      - client_assertion_type
      properties:
        grant_type:
          type: string
          enum:
          - client_credentials
          description: client_credentials
        client_assertion_type:
          type: string
          enum:
          - urn:ietf:params:oauth:client-assertion-type:jwt-bearer
          description: URL-encoded value of `urn:ietf:params:oauth:client-assertion-type:jwt-bearer`
        client_assertion:
          type: string
          description: A JSON Web Token the client needs to create and sign with the
            private key of the Assertion Signing Key.
    IssueStatelessChannelTokenByClientSecretRequest:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token
      description: Request body to issue a new token with `client_id` and `client_secret`
      type: object
      required:
      - grant_type
      - client_id
      - client_secret
      properties:
        grant_type:
          type: string
          enum:
          - client_credentials
          description: '`client_credentials`'
        client_id:
          type: string
          description: Channel ID.
        client_secret:
          type: string
          description: Channel secret.
    IssueStatelessChannelAccessTokenResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#issue-stateless-channel-access-token
      description: Issued stateless channel access token
      required:
      - access_token
      - expires_in
      - token_type
      type: object
      properties:
        access_token:
          type: string
          description: 'A stateless channel access token.

            The token is an opaque string which means its format is an implementation
            detail

            and the consumer of this token should never try to use the data parsed
            from the token.

            '
        expires_in:
          type: integer
          format: int32
          description: Duration in seconds after which the issued access token expires
        token_type:
          type: string
          default: Bearer
          description: Token type. The value is always `Bearer`.
    ChannelAccessTokenKeyIdsResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#get-all-valid-channel-access-token-key-ids-v2-1
      description: Channel access token key IDs
      required:
      - kids
      type: object
      properties:
        kids:
          description: Array of channel access token key IDs.
          type: array
          items:
            type: string
    IssueShortLivedChannelAccessTokenResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#issue-shortlived-channel-access-token
      description: Issued short-lived channel access token
      required:
      - access_token
      - expires_in
      - token_type
      type: object
      properties:
        access_token:
          type: string
          description: 'A short-lived channel access token. Valid for 30 days.

            Note: Channel access tokens cannot be refreshed.

            '
        expires_in:
          type: integer
          format: int32
          description: Time until channel access token expires in seconds from time
            the token is issued.
        token_type:
          type: string
          default: Bearer
          description: Token type. The value is always `Bearer`.
    IssueChannelAccessTokenResponse:
      externalDocs:
        url: https://developers.line.biz/en/reference/messaging-api/#issue-channel-access-token-v2-1
      description: Issued channel access token
      required:
      - access_token
      - expires_in
      - token_type
      - key_id
      type: object
      properties:
        access_token:
          type: string
          description: 'Channel access token.

            '
        expires_in:
          type: integer
          format: int32
          description: Amount of time in seconds from issue to expiration of the channel
            access token
        token_type:
          type: string
          default: Bearer
          description: A token type.
        key_id:
          type: string
          description: Unique key ID for identifying the channel access token.
    VerifyChannelAccessTokenResponse:
      description: Verification result
      required:
      - client_id
      - expires_in
      type: object
      properties:
        client_id:
          type: string
          description: The channel ID for which the channel access token was issued.
        expires_in:
          type: integer
          format: int64
          description: Number of seconds before the channel access token expires.
        scope:
          type: string
          description: Permissions granted to the channel access token.
  responses: {}
  parameters: {}
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Channel access token
    basicAuth:
      type: http
      scheme: basic
